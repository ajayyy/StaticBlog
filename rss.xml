<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Ajay Ramachandran's Blog]]></title><description><![CDATA[You can find projects I've worked on and links to contact me.]]></description><link>https://blog.ajay.app</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 27 Jun 2023 06:58:00 GMT</lastBuildDate><item><title><![CDATA[DeArrow - Better Title and Thumbnails]]></title><description><![CDATA[DeArrow Screenshot DeArrow is an new browser extension I just released for crowdsourcing better titles and thumbnails on YouTube. The goal…]]></description><link>https://blog.ajay.app/dearrow/</link><guid isPermaLink="false">https://blog.ajay.app/dearrow/</guid><pubDate>Sat, 10 Jun 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://dearrow.ajay.app/screenshot1.png&quot; alt=&quot;DeArrow Screenshot&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dearrow.ajay.app/&quot;&gt;DeArrow&lt;/a&gt; is an new browser extension I just released for crowdsourcing better titles and thumbnails on YouTube. The goal is to make titles accurate and reduce sensationalism.&lt;/p&gt;
&lt;p&gt;Titles can be any arbitrary text. Thumbnails are screenshots from specific timestamps in the video. These are user submitted and voted on. By default, if there are no submissions, it will format the original title to the user-specified format, and set a screenshot from a random timestamp as the thumbnail. This can be configured in the options to disable formatting, or show the original thumbnail by default.&lt;/p&gt;
&lt;p&gt;It&apos;s still in beta right now, but should be ready to try out!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Custom Chapters - SponsorBlock]]></title><description><![CDATA[Chapters Custom chapters is a feature for crowd-sourcing specific sections inside of videos. These custom sections can be made inside…]]></description><link>https://blog.ajay.app/chapters-sponsorblock/</link><guid isPermaLink="false">https://blog.ajay.app/chapters-sponsorblock/</guid><pubDate>Wed, 21 Sep 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/chapters.png&quot; alt=&quot;Chapters&quot;&gt;&lt;/p&gt;
&lt;p&gt;Custom chapters is a feature for crowd-sourcing specific sections inside of videos.&lt;/p&gt;
&lt;p&gt;These custom sections can be made inside eachother to make more-and-more specific sections. This also allows for better collaboration, as you can easily add to someone else&apos;s chapter submissions by making more precise chapters inside of theirs.&lt;/p&gt;
&lt;p&gt;Here is a demo:&lt;/p&gt;
&lt;iframe align=&quot;center&quot; width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/H_mP7bpbA_c?modestbranding=1&amp;rel=0&quot; title=&quot;Demo Video&quot;
    frameborder=&quot;0&quot; allow=&quot;autoplay; clipboard-write; encrypted-media; picture-in-picture&quot;
    allowfullscreen&gt;
&lt;/iframe&gt;
&lt;h2&gt;Release&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/releases/tag/5.0.3&quot;&gt;5.0.3&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Full Video Labels - SponsorBlock]]></title><description><![CDATA[Full video sponsor segment Full video reports allow you to know when an entire video is sponsored, exclusive access self-promotion. This…]]></description><link>https://blog.ajay.app/full-video-sponsorblock/</link><guid isPermaLink="false">https://blog.ajay.app/full-video-sponsorblock/</guid><pubDate>Thu, 06 Jan 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/full-video-sponsorblock.png&quot; alt=&quot;Full video sponsor segment&quot;&gt;&lt;/p&gt;
&lt;p&gt;Full video reports allow you to know when an entire video is sponsored, exclusive access self-promotion. This should be added to videos that have sponsors so tightly integrated that they cannot be removed with skipping or muting.&lt;/p&gt;
&lt;p&gt;Even when a video is labeled like this, the parts that can be skipped still should be skipped.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/full-video-selfpromo.png&quot; alt=&quot;Full video selfpromo segment&quot;&gt;&lt;/p&gt;
&lt;p&gt;Exclusive access is a new category for labeling videos where the creator showcases a product, service or location that they&apos;ve received free or subsidised access. This is in contrast to sponsor-labeled videos which must have recieved money.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/full-video-exclusive-access.png&quot; alt=&quot;Full video exclusive access segment&quot;&gt;&lt;/p&gt;
&lt;p&gt;The harder part with these types of labels is when an uploader don&apos;t make proper disclosures of their sponsorships. Hopefully, this feature will allow these badly disclosed sponsorships to be properly disclosed. Someone can do to the research into whether a video is actually sponsored or not, and be able to use this feature to let others know about it.&lt;/p&gt;
&lt;p&gt;If you find anything you are unsure of, feel free to ask about it on &lt;a href=&quot;https://discord.gg/SponsorBlock&quot;&gt;Discord&lt;/a&gt; or &lt;a href=&quot;https://matrix.to/#/#sponsor:ajay.app?via=ajay.app&amp;#x26;via=matrix.org&amp;#x26;via=mozilla.org&quot;&gt;Matrix&lt;/a&gt; and hopefully we can collectively combat these badly disclosed videos.&lt;/p&gt;
&lt;p&gt;For more information about specifics, check out the wiki: &lt;a href=&quot;https://wiki.sponsor.ajay.app/w/Full_Video_Labels&quot;&gt;https://wiki.sponsor.ajay.app/w/Full_Video_Labels&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Release&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/releases/tag/4.0&quot;&gt;4.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sponsor.ajay.app/donate&quot;&gt;Support my work on SponsorBlock&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Mute Segments - SponsorBlock]]></title><description><![CDATA[Submitting mute segments The new mute segments allow you to mute a section of a video instead of skipping it. This is useful when there is…]]></description><link>https://blog.ajay.app/mute-sponsorblock/</link><guid isPermaLink="false">https://blog.ajay.app/mute-sponsorblock/</guid><pubDate>Sat, 04 Sep 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/mute-sponsorblock.png&quot; alt=&quot;Submitting mute segments&quot;&gt;&lt;/p&gt;
&lt;p&gt;The new mute segments allow you to mute a section of a video instead of skipping it. This is useful when there is something that needs be skipped in the audio, such as an audible sponsor message, while the video on-screen is important. This will also be able to be used to remove those annoying bell sounds that are sometimes added for reminding people to subscribe.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/unmute-notice.png&quot; alt=&quot;Unmute Notice&quot;&gt;&lt;/p&gt;
&lt;p&gt;This new action can be used with Sponsor, Unpaid/Self Promotion and Interaction Reminder.&lt;/p&gt;
&lt;p&gt;One other cool thing I have noticed with this is that mute segments can get even more precise than skips. With skipping, the browser sometimes acts up when it skips a very short amount of time, making it a better experience just to not skip it at all. With muting segments, it feels a lot smoother and you don&apos;t really notice the muting happen.&lt;/p&gt;
&lt;p&gt;As with normal segments, you have the option to unmute at any time to hear what is actually happening.&lt;/p&gt;
&lt;h2&gt;Release&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/releases/tag/3.1&quot;&gt;3.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sponsor.ajay.app/donate&quot;&gt;Support my work on SponsorBlock&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Highlight - SponsorBlock]]></title><description><![CDATA[SpaceX Launch This new category in the SponsorBlock extension allows you to get to the point of the video, solving problems such as the…]]></description><link>https://blog.ajay.app/highlight-sponsorblock/</link><guid isPermaLink="false">https://blog.ajay.app/highlight-sponsorblock/</guid><pubDate>Sat, 21 Aug 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/spacex-highlight.png&quot; alt=&quot;SpaceX Launch&quot;&gt;&lt;/p&gt;
&lt;p&gt;This new category in &lt;a href=&quot;https://sponsor.ajay.app&quot;&gt;the SponsorBlock extension&lt;/a&gt; allows you to get to the point of the video, solving problems such as &lt;a href=&quot;https://old.reddit.com/r/pics/comments/kxfxy/and_so_ends_20_years_of_frustration/c2o1cyy/?context=3&quot;&gt;the Wadsworth constant&lt;/a&gt;. The extension will either ask if you want to skip to the &quot;highlight&quot;, or auto skip to it right away depending on your preference.&lt;/p&gt;
&lt;p&gt;You can use it to &lt;a href=&quot;https://www.youtube.com/watch?v=sSiuW1HcGjA&quot;&gt;watch rocket launches&lt;/a&gt; or even skip &lt;a href=&quot;https://www.youtube.com/watch?v=BHiWygziyso&quot;&gt;right to the explosion&lt;/a&gt; in a non rocketry video.&lt;/p&gt;
&lt;p&gt;Many people were using the intermission category for this, which was wrong, so hopefully this will reduce those issues.&lt;/p&gt;
&lt;h2&gt;Uses (In order of priority)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Skipping to the point/most important part of the video&lt;/li&gt;
&lt;li&gt;Skipping to the part of the video referred to by the title&lt;/li&gt;
&lt;li&gt;Skipping to the part of the video referred to by the thumbnail&lt;/li&gt;
&lt;li&gt;Skipping to the part of the video referenced from a preview/teaser at the start of the video&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Mini fading notice&lt;/h1&gt;
&lt;p&gt;The notice has now been changed to take up less space, and start out faded after an auto skip. This can be configured in the options and you can go back to the old one if you want.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/new-notice.gif&quot; alt=&quot;New Notice&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Internals&lt;/h1&gt;
&lt;p&gt;These new segments are a new type called &lt;em&gt;POI&lt;/em&gt; (Point of Interest), which refers to one specific timestamp instead of a start and end time. Internally, they are stored as the start time and end time being equal. This POI segment type potentially could be used in the future for other categories.&lt;/p&gt;
&lt;p&gt;I tried to design it to be expandable in that way and not just hardcode in the highlight category.&lt;/p&gt;
&lt;p&gt;One idea I have for future is to allow community created and moderated categories to be more flexible than the current small number of nicely curated categories. This would allow for the crazy things people want like skipping specifically timelapse sections, or skipping skits, that are just too specific to be included as a default category. Though, I am still a little hesitent with this, as the current simplicity does help make the extension so approachable.&lt;/p&gt;
&lt;p&gt;With this abstraction, it would be possible for these custom categories to also be POI categories.&lt;/p&gt;
&lt;h2&gt;Release&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/releases/tag/3.0&quot;&gt;3.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sponsor.ajay.app/donate&quot;&gt;Support my work on SponsorBlock&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Categories - SponsorBlock]]></title><description><![CDATA[SponsorBlock is an open-source crowdsourced browser extension to skip sponsor segments in YouTube videos. Users submit when a sponsor…]]></description><link>https://blog.ajay.app/categories-sponsorblock/</link><guid isPermaLink="false">https://blog.ajay.app/categories-sponsorblock/</guid><pubDate>Sun, 14 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://sponsor.ajay.app&quot;&gt;SponsorBlock&lt;/a&gt; is an open-source crowdsourced browser extension to skip sponsor segments in YouTube videos. Users submit when a sponsor happens from the extension, and the extension automatically skips sponsors it knows about. SponsorBlock also has a public database and API for others to integrate and use.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Categories&lt;/h1&gt;
&lt;p&gt;The newest update added the categories. Categories allow you to submit a segment to skip that is not a sponsor. This allows skipping other things like intros, outros, and non-sponsor promotion. Most importantly, this ensures that people are less likely to accidentally submit non-sponsored content as a sponsor, just because they want to skip it anyway.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/categories-sponsorblock-list.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This feature has been requested since the beginning, but I was pretty hesitant to add it. In the end, I decided to add only categories that I felt were objective enough to prevent disputes on if something is correct or not correct. I decided to go with a category system instead of a tag system for similar reasons.&lt;/p&gt;
&lt;h3&gt;Switch to react&lt;/h3&gt;
&lt;p&gt;Previously, all injected elements were created with the &lt;code class=&quot;language-text&quot;&gt;document.createElement()&lt;/code&gt; APIs. This ended up being very hard to maintain once it got large, so I decided to redo all of them in react.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/categories-sponsorblock-notice.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;I decided to take this previously created skip notice and use it as the base for all the new UI. To make submitting categories simple, I decided to move them into an edit panel that appears after clicking submit.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/categories-sponsorblock-submit.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Now, the UI is a lot more consistent. I plan to move more and more into in-video UI like this.&lt;/p&gt;
&lt;h3&gt;Stats so far&lt;/h3&gt;
&lt;p&gt;It&apos;s been a week now since stable rollout of categories. Here are the number of submissions for each category in the past week.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/categories-sponsorblock-stats.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Voting&lt;/h3&gt;
&lt;p&gt;I have decided to revert treating skipping without clicking the report button as an upvote. It was a neat idea to try, but it made the data close to useless. Many people don&apos;t bother interacting and clicking the report button if there is an issue, so I feel it is better to have an explicit vote option.&lt;/p&gt;
&lt;p&gt;I have also added a new &quot;category vote&quot; option. For now, only one person needs to make this vote for the change to occur, but this may change in the future. This will help fix the self-promotion segments that have been mistakenly submitted as sponsor before categories.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/categories-sponsorblock-vote.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Precise Skipping&lt;/h1&gt;
&lt;p&gt;This was added back in February, but I haven&apos;t said anything about it yet.&lt;/p&gt;
&lt;p&gt;Previously, skipping was using a very naive approach. It listened to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/durationchange_event&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;video.ondurationchange&lt;/code&gt;&lt;/a&gt; event and checking if it was currently in a segment. While this works, it is limited by the speed of that event call, which is ~250 ms on most browsers.&lt;/p&gt;
&lt;p&gt;Now, the extension uses &lt;code class=&quot;language-text&quot;&gt;setTimeout&lt;/code&gt; to schedule skips in the future. When the skip is scheduled to happen, it checks again if it is the correct time, and triggers another &lt;code class=&quot;language-text&quot;&gt;setTimeout&lt;/code&gt; if needed. It also listens on all of the video change events such as playing, pausing, changing speed, etc. to reset the schedule.&lt;/p&gt;
&lt;p&gt;This ended up working very well and made skips happen with a precision of ~5 ms - 15 ms. It should also use less processing power.&lt;/p&gt;
&lt;h1&gt;Cool Other Projects&lt;/h1&gt;
&lt;p&gt;Along with &lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/wiki/Unofficial-Ports&quot;&gt;ports&lt;/a&gt; people have made with the API and database, there is another cool project that is being worked on.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;https://github.com/andrewzlee/NeuralBlock&quot;&gt;neural network&lt;/a&gt; has been trained on the SponsorBlock database and it works suprisingly well. The timings are not precise enough to replace humans yet, but the plan is to maybe use it for moderation in the future. It uses the captions to determine the timings. The best part, is that it is made completely by someone else and not me. It has made me very happy about my decision to make the database public. It is not being used yet.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Invidious Support and Dynamic Options Page | SponsorBlock]]></title><description><![CDATA[Repository https://github.com/ajayyy/SponsorBlock Invidious support Challenges The extension only has permission to view the YouTube domain…]]></description><link>https://blog.ajay.app/invidious-support-and-dynamic-options-page-or-sponsorblock/</link><guid isPermaLink="false">https://blog.ajay.app/invidious-support-and-dynamic-options-page-or-sponsorblock/</guid><pubDate>Sun, 19 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock&quot;&gt;https://github.com/ajayyy/SponsorBlock&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Invidious support&lt;/h1&gt;
&lt;h4&gt;Challenges&lt;/h4&gt;
&lt;p&gt;The extension only has permission to view the YouTube domain, and adding permissions causes the extension to automatically be disabled for all users. So, I had to make it an option and use Chrome&apos;s optional permissions API.&lt;/p&gt;
&lt;h4&gt;Optional Content Scripts&lt;/h4&gt;
&lt;p&gt;The harder part to do  is optional content scripts. &lt;a href=&quot;https://developer.chrome.com/extensions/declarativeContent#type-RequestContentScript&quot;&gt;The API to do this&lt;/a&gt; is considered &quot;expiremental&quot; in chrome, even though it has been around for years.&lt;/p&gt;
&lt;p&gt;I works very similarity to registering a content script in the manifest, but can be done programmatically. All you need is the specific site permission. The catch is that it is not perfect. For example, it just doesn&apos;t work in incongnito for some reason. There is no documentation saying this and their excuse is that it is &quot;expiremental&quot; and should not be used in production code, even though it is the only way to do this.&lt;/p&gt;
&lt;p&gt;The only alternative is to use the &lt;code class=&quot;language-text&quot;&gt;tabs&lt;/code&gt; permission, and read &lt;strong&gt;every&lt;/strong&gt; URL visited to see if it is the one you want. If found, you can &lt;code class=&quot;language-text&quot;&gt;executeScript()&lt;/code&gt; on that page. Not only is this less effecient, but it requires the scary &lt;code class=&quot;language-text&quot;&gt;tabs&lt;/code&gt; permission which tells the user that you can read the user&apos;s browsing history. I may revert to this technique in the future as an &quot;Advanced Mode&quot; that supports Incognito tabs.&lt;/p&gt;
&lt;p&gt;This API is not available in Firefox, which instead uses a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/contentScripts/register&quot;&gt;different API&lt;/a&gt;. This API automatically unregisters your content script on restart. To prevent this, you must reregister it after every restart in the background script. This is pretty simple to use.&lt;/p&gt;
&lt;h4&gt;UI Support&lt;/h4&gt;
&lt;p&gt;Thankfully, &lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/181&quot;&gt;Afrmtbl&lt;/a&gt; made a PR to add the UI support, so I didn&apos;t need to do that.&lt;/p&gt;
&lt;h4&gt;Final Result&lt;/h4&gt;
&lt;p&gt;You can now enable invidious support in the options by clicking the toggle and accepting the extra permissions. If you disable it at a later point, the extension will remove the permissions from itself as well, so it never has too many permissions.&lt;/p&gt;
&lt;h1&gt;Options Page&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/Jk4CpOE5-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;The way options used to be handled was terrible.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vxlmT38X-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;There were just a bunch of buttons in the popup that changed their text when you toggled them.&lt;/p&gt;
&lt;p&gt;It now is a list of toggle boxes and buttons that use a consistent feel.&lt;/p&gt;
&lt;p&gt;Not only does this look nicer, it also is cleaner in the code. The options are now handled by one function that scans the HTML. It reads the attributes of the divs to determine what the option should toggle.&lt;/p&gt;
&lt;p&gt;In the HTML, the option toggles look like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-html line-numbers&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;option-type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;toggle&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;toggle-type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;reverse&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;sync-option&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;disableAutoSkip&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;switch-container&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;label-name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;__MSG_autoSkip__&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;switch&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
			&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;checkbox&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
			&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;slider round&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;

	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;small-description&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;__MSG_autoSkipDescription__&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will change what option changes using the &lt;code class=&quot;language-text&quot;&gt;sync-option&lt;/code&gt; attribute. The &lt;code class=&quot;language-text&quot;&gt;toggle-type&lt;/code&gt; attribute is used if the option is reversed. For example, when &lt;code class=&quot;language-text&quot;&gt;disableAutoSkip&lt;/code&gt; is true, this switch should show false, as it is called &quot;Auto Skip&quot;.&lt;/p&gt;
&lt;p&gt;This makes it easy to add new options.&lt;/p&gt;
&lt;h4&gt;Text change type&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-html line-numbers&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;option-type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text-change&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;sync-option&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;userID&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;confirm-message&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;userIDChangeWarning&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;option-button trigger-button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
		__MSG_changeUserID__
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;

	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;small-description&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;__MSG_whatChangeUserID__&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;option-hidden-section hidden&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;

		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;option-text-box&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;

		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;option-button text-change-set&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
			__MSG_setUserID__
		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This one is similar. The &lt;code class=&quot;language-text&quot;&gt;option-type&lt;/code&gt; is now &lt;code class=&quot;language-text&quot;&gt;text-change&lt;/code&gt;. The &lt;code class=&quot;language-text&quot;&gt;confirm-message&lt;/code&gt; specifies what message should be displayed on the confirmation box before the options is set. This can be omitted if you do not need it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-html line-numbers&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;option-type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;keybind-change&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;sync-option&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;startSponsorKeybind&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;option-button trigger-button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
		__MSG_setStartSponsorShortcut__
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;option-hidden-section hidden&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;

		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;medium-description keybind-status&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
			__MSG_keybindDescription__
		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;medium-description bold keybind-status-key&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
			
		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This option will ask the user to click a key. The clicked key will be saved in &lt;code class=&quot;language-text&quot;&gt;sync-option&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Using these&lt;/h4&gt;
&lt;p&gt;When using these, copy one of the other ones and change the parameters. The other divs inside are needed for it to work, as the JavaScript only hides divs or changes text.&lt;/p&gt;
&lt;h4&gt;How it works&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-js line-numbers&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; optionsElements&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;option-type&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;toggle&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; 
            &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; option &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;sync-option&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; optionResult &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;SB&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;option&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; checkbox &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;input&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; reverse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;toggle-type&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;reverse&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;optionResult &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                checkbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;checked &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; optionResult&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;reverse&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                    optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;input&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;checked &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;optionResult&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;token comment&quot;&gt;// See if anything extra should be run first time&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;option&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;supportInvidious&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;token function&quot;&gt;invidiousInit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;checkbox&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; option&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;token comment&quot;&gt;// Add click listener&lt;/span&gt;
            checkbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token constant&quot;&gt;SB&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;option&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; reverse &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;checkbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;checked &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; checkbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;checked&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;token comment&quot;&gt;// See if anything extra must be run&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;option&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;supportInvidious&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
                        &lt;span class=&quot;token function&quot;&gt;invidiousOnClick&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;checkbox&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; option&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text-change&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; button &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.trigger-button&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            button&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;activateTextChange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; textChangeOption &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;sync-option&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// See if anything extra must be done&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;textChangeOption&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;invidiousInstances&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;token function&quot;&gt;invidiousInstanceAddInit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; textChangeOption&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;keybind-change&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; keybindButton &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.trigger-button&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            keybindButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;activateKeybindChange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token function&quot;&gt;updateDisplayElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;optionsElements&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Depending on the &lt;code class=&quot;language-text&quot;&gt;option-type&lt;/code&gt;, a different switch case will be triggered. For the toggle type, it simply sets up a click listener and will change the option accordingly. It will also make sure to set the checkbox to the right position at the start.&lt;/p&gt;
&lt;p&gt;The &quot;See if anything extra should be run first time&quot; allow for custom option types to be created. In these switch statements, code specific to one option can be added. For example, this is how all of the Invidious Support code is run while keeping the checkbox still bound by all of the normal rules.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[The last two months of SponsorBlock - UI improvements and userbase growing pains]]></title><description><![CDATA[Repository https://github.com/ajayyy/SponsorBlock Since my last update post was in August, this is a recap of everything important that has…]]></description><link>https://blog.ajay.app/the-last-two-months-of-sponsorblock-ui-improvements-and-userbase-growing-pains/</link><guid isPermaLink="false">https://blog.ajay.app/the-last-two-months-of-sponsorblock-ui-improvements-and-userbase-growing-pains/</guid><pubDate>Thu, 31 Oct 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock&quot;&gt;https://github.com/ajayyy/SponsorBlock&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since my last update post was in August, this is a recap of everything important that has happened since.&lt;/p&gt;
&lt;h1&gt;New notice&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/fade_out_2.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/reskip.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;This notice not only looks waaay better than the original, it also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is much smaller, hiding less of the video&lt;/li&gt;
&lt;li&gt;Is in a better location, making it visible in full screen&lt;/li&gt;
&lt;li&gt;Let&apos;s you see how long is left before it closes&lt;/li&gt;
&lt;li&gt;Has a nice timer&lt;/li&gt;
&lt;li&gt;Stays open when you unskip&lt;/li&gt;
&lt;li&gt;Let&apos;s you know how long the sponsor is after unskipping&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Side effects&lt;/h3&gt;
&lt;p&gt;With this change, the voting system is a little different. Instead of upvotes and downvotes, there is simply a report button. If someone skips a sponsor without reporting it, it is treated as an upvote (unless they disable the notice or view tracking).&lt;/p&gt;
&lt;p&gt;To counter the issue of people not realizing they are upvoting, downvotes now count 4x as much as a normal upvote.&lt;/p&gt;
&lt;h1&gt;Preview Unsubmitted Sponsors&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/unknown.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;They appear in blue.&lt;/p&gt;
&lt;h1&gt;Banning and VIPs&lt;/h1&gt;
&lt;p&gt;As the userbase grows, there will be some bad actors. To help with this, there is now a way to ban users without them knowing they are banned and a way to give certain people more privileges (votes count for more).&lt;/p&gt;
&lt;p&gt;There is also now a auto temp-ban system in place. If there are too many low ranking submissions by a users, there new submissions will be banned until they start getting better votes.&lt;/p&gt;
&lt;h1&gt;Keybinds are now customisable&lt;/h1&gt;
&lt;p&gt;Before, this was annoying for people with different keyboard layouts.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/setkeybinds.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Userbase growing pains&lt;/h1&gt;
&lt;p&gt;The userbase is growing way faster than I ever could have imagined. This is amazing, but has also required a lot of server tweaking to get right. There are still a few issues happening with the server during peak times, but I will continue to work on getting them fixed. Feel free to check &lt;a href=&quot;http://status.sponsor.ajay.app&quot;&gt;http://status.sponsor.ajay.app&lt;/a&gt; if you have server issues.&lt;/p&gt;
&lt;h1&gt;More translations&lt;/h1&gt;
&lt;p&gt;Thanks to some nice people in the communty, there are now some translations. If you would like to translate, it is pretty easy and does not require much technical knowledge, just reach out to me and I&apos;ll help you get started. Many are only partial translations for now, but the whole program is  translatable at  the moment.&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Preview Bar, Stats, Editing Additions And More - SponsorBlock]]></title><description><![CDATA[Repository https://github.com/ajayyy/SponsorBlock
https://github.com/ajayyy/SponsorBlockServer image.png SponsorBlock So many users have…]]></description><link>https://blog.ajay.app/preview-bar-stats-editing-additions-and-more-sponsorblock/</link><guid isPermaLink="false">https://blog.ajay.app/preview-bar-stats-editing-additions-and-more-sponsorblock/</guid><pubDate>Tue, 13 Aug 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock&quot;&gt;https://github.com/ajayyy/SponsorBlock&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer&quot;&gt;https://github.com/ajayyy/SponsorBlockServer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/gBb8T4DG-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;SponsorBlock&lt;/h1&gt;
&lt;p&gt;So many users have joined since the last update. The amount of users who have submitted a sponsor is now over 400!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SponsorBlock is a crowdsourced extension to block sponsor segments of YouTube videos. Users submit when sponsors happen to the extension, and the extension automatically skips sponsors it knows about. It also features an upvote/downvote system with a weighted random based distribution algorithm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Client&lt;/h3&gt;
&lt;h5&gt;New help page&lt;/h5&gt;
&lt;p&gt;There is now a help page to let people figure out how to use this extension when they install it!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sponsor.ajay.app/help/&quot;&gt;https://sponsor.ajay.app/help/&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Leaderboards!&lt;/h5&gt;
&lt;p&gt;You can now see who the top contributors of this extension are and choose a username to appear on the leaderboard.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sponsor.ajay.app/stats/&quot;&gt;https://sponsor.ajay.app/stats/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/P7jmWDbc-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/usernames.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5&gt;New notice position&lt;/h5&gt;
&lt;p&gt;The notice is now a little smaller and moved to a better location for use in fullscreen. This notice is planned to be fully revamped in the near future.&lt;/p&gt;
&lt;h5&gt;Local submission counter fixes&lt;/h5&gt;
&lt;p&gt;The local submission counter now is better and only counts submissions if the server responded without an error message. This was causing some users to have inflated stats locally.&lt;/p&gt;
&lt;h4&gt;Channel whitelisting&lt;/h4&gt;
&lt;p&gt;You can now white list channels and see their sponsors. This doesn&apos;t work on 0 second sponsors to keep them loading as fast as possible, but it does work for later sponsors.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/whitelisting.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5&gt;More sponsor updated&lt;/h5&gt;
&lt;p&gt;The sponsors now update again if you have just uploaded sponsors and it will retry fetching in a few seconds if the server is down. The server can sometimes be down for 1 or 2 seconds between updates, so this will help a lot.&lt;/p&gt;
&lt;h4&gt;Edit panel additions&lt;/h4&gt;
&lt;p&gt;You can now not edit unfinished sponsors.&lt;/p&gt;
&lt;p&gt;Button padding has been increased.&lt;/p&gt;
&lt;p&gt;Added a preview button to go a few seconds before the sponsor and see how it looks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/50ogSx3.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Added a button to set the current time in an edit.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/current_time.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Preview bar&lt;/h4&gt;
&lt;p&gt;You can now see when the sponsors will happen on the seek bar&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/unknown.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Downvoting a sponsor will hide it for you&lt;/h4&gt;
&lt;p&gt;This will make submitting a new sponsor around that time much easier.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;Client:
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/56&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/56&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/59&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/59&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/68&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/68&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/70&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/70&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/97&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/97&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/99&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/99&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/100&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/100&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/104&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/104&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/107&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/107&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/109&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/109&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Server:
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/pull/18&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/pull/18&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/pull/17&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/pull/17&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/pull/15&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/pull/15&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/pull/14&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/pull/14&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/pull/12&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/pull/12&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[SponsorBlock - Block YouTube Sponsorships]]></title><description><![CDATA[Repository https://github.com/ajayyy/SponsorBlock
https://github.com/ajayyy/SponsorBlockServer image.png SponsorBlock It's out! Download it…]]></description><link>https://blog.ajay.app/sponsorblock-block-youtube-sponsorships/</link><guid isPermaLink="false">https://blog.ajay.app/sponsorblock-block-youtube-sponsorships/</guid><pubDate>Mon, 29 Jul 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock&quot;&gt;https://github.com/ajayyy/SponsorBlock&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer&quot;&gt;https://github.com/ajayyy/SponsorBlockServer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://files.steempeak.com/file/steempeak/ajayyy/gBb8T4DG-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;SponsorBlock&lt;/h1&gt;
&lt;p&gt;It&apos;s out! Download it on the Chrome Webstore or the Firefox addons store! Over 400 submissions so far!&lt;/p&gt;
&lt;p&gt;Chrome: &lt;a href=&quot;https://chrome.google.com/webstore/detail/mnjggcdmjocbbbhaepdhchncahnbgone/&quot;&gt;https://chrome.google.com/webstore/detail/mnjggcdmjocbbbhaepdhchncahnbgone/&lt;/a&gt;
Firefox: &lt;a href=&quot;https://addons.mozilla.org/addon/sponsorblock/&quot;&gt;https://addons.mozilla.org/addon/sponsorblock/&lt;/a&gt;
Discord: &lt;a href=&quot;https://discord.gg/QnmVMpU&quot;&gt;https://discord.gg/QnmVMpU&lt;/a&gt;
Website: &lt;a href=&quot;https://sponsor.ajay.app/&quot;&gt;https://sponsor.ajay.app/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SponsorBlock is a crowdsourced browser extension to block sponsor segments of YouTube videos. Users submit when sponsor happen to the extension, and the extension automatically skips sponsors it knows about. It also features an upvote/downvote system with a weighted random based distribution algorithm.&lt;/p&gt;
&lt;h1&gt;Lots of changes&lt;/h1&gt;
&lt;h3&gt;Now works on Firefox&lt;/h3&gt;
&lt;p&gt;This luckily wasn&apos;t difficult at all since Firefox supports Chrome extensions natively, I just had to change a few things due to the difference in how the API&apos;s are handled.&lt;/p&gt;
&lt;h3&gt;View count&lt;/h3&gt;
&lt;p&gt;The amount of views each sponsor gets (well, the amount of skips) is now recorded. This is nice because it gives users who submit sponsors direct feedback on how they are improving other people&apos;s viewing experience.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/Wp8goTtJ-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This can be disabled if you don&apos;t want this.&lt;/p&gt;
&lt;h3&gt;More checks&lt;/h3&gt;
&lt;p&gt;More ways to prevent someone from destroying the viewing experience such as preventing sponsors from being placed right next to eachother.&lt;/p&gt;
&lt;h3&gt;Errors&lt;/h3&gt;
&lt;p&gt;Errors now have custom messages to better inform you about what&apos;s wrong and help me debug.&lt;/p&gt;
&lt;h3&gt;Hotkey&lt;/h3&gt;
&lt;p&gt;You can now use the semicolon button to indicate the start and end of sponsors and click the single quote button to submit. This should make it easier to submit.&lt;/p&gt;
&lt;h3&gt;Sponsor time deleting&lt;/h3&gt;
&lt;p&gt;Individual sponsor times can now be deleted before submitting.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/wOV7y40r-deleting20individual20times.gif&quot; alt=&quot;deleting individual times.gif&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Sponsor time editing&lt;/h3&gt;
&lt;p&gt;You can now edit the sponsors before submitting. This was a very requested feature.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QvIzibaj-sponsorEditing.gif&quot; alt=&quot;sponsorEditing.gif&quot;&gt;&lt;/p&gt;
&lt;h3&gt;New way to access the popup.&lt;/h3&gt;
&lt;p&gt;It seemed like a lot of people were not realising that there were more settings in the popup menu, so there is now another way to access the popup. Click the info button on the video player to open the popup the page you are watching the video on.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/M5DpUeQh-new20popup.gif&quot; alt=&quot;new popup.gif&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Lots of other fixes&lt;/h3&gt;
&lt;p&gt;It should never use sponsors from the wrong video anymore and the on video buttons now update properly when switching videos. Before, they would maintain their state, which wouldn&apos;t work since the code always assumes it starts at the default position.&lt;/p&gt;
&lt;p&gt;The YouTube page never reloads, and instead just updates the page itself (like a PWA), so the code can&apos;t rely on everything being reset when a video change occurs.&lt;/p&gt;
&lt;h4&gt;Git diff&lt;/h4&gt;
&lt;p&gt;Client:
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/compare/4c380aa1bf8a35d7be596927d187e5a55c863707...master&quot;&gt;https://github.com/ajayyy/SponsorBlock/compare/4c380aa1bf8a35d7be596927d187e5a55c863707...master&lt;/a&gt; (thanks OfficialNoob for the pull requests!)
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/compare/cd36e2b64be8d209f62c6e102a424da4c5bc97d0...master&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/compare/cd36e2b64be8d209f62c6e102a424da4c5bc97d0...master&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Ready for Rollout | SponsorBlock | YouTube Sponsorship Segment Blocker]]></title><description><![CDATA[Repository https://github.com/ajayyy/SponsorBlock
https://github.com/ajayyy/SponsorBlockServer SponsorBlock SponsorBlock is an extension…]]></description><link>https://blog.ajay.app/ready-for-rollout-or-sponsorblock-or-youtube-sponsorship-segment-blocker/</link><guid isPermaLink="false">https://blog.ajay.app/ready-for-rollout-or-sponsorblock-or-youtube-sponsorship-segment-blocker/</guid><pubDate>Mon, 22 Jul 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock&quot;&gt;https://github.com/ajayyy/SponsorBlock&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer&quot;&gt;https://github.com/ajayyy/SponsorBlockServer&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;SponsorBlock&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;SponsorBlock is an extension that skips over sponsored segments of YouTube videos. SponsorBlock is a crowdsourced browser extension that let&apos;s anyone submit the start and end time&apos;s of sponsored segments of YouTube videos. Once one person submits this information, everyone else with this extension will skip right over the sponsored segment.&lt;/p&gt;
&lt;p&gt;In summary, it&apos;s a crowd-sourced adblock for sponsored sections of YouTube videos.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Client Side&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Made it possible for multiple notices to appear, added an animation for it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/KbpbivRJ-mutliple20notices.gif&quot; alt=&quot;mutliple notices.gif&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added button to popup to allow you to vote from the popup.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/pKwBlmYP-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added messages to indicate the status of different things, such as errors or that it&apos;s loading&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added submit button on the video player.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/rymnMa7n-submit20animation.gif&quot; alt=&quot;submit animation.gif&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made it keep checking for submitted sponsor times every 10 seconds on recent videos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This should help a lot for when videos are just published, so even if you are one of the first to watch a video, you might still get some sponsors skipped by people having submitted info by the time you reach near the end of the video.&lt;/p&gt;
&lt;p&gt;This uses the API provided by invidious that gives out the date a video was published in seconds. This number can then be checked to see if it is less than 3 days old.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Switched it from using local storage to synced storage.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, you should be treated as the same user when switching devices.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added small notice of how many submissions this user has made.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This should help encourage people to submit info, as they can see exactly how much they have helped.&lt;/p&gt;
&lt;h1&gt;Server-side&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Preventing voting twice except for changing a vote&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This makes it so a user can vote on something they have already voted on if they are going to change their vote. They can change their upvote to a downvote.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made it order the sponsor times by start time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This looks so much better in the UI for reporting times, as it shows it in chronological order.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://files.steempeak.com/file/steempeak/ajayyy/pKwBlmYP-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added rate limit per day per IP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This should prevent spam from one IP. Maybe it can be changed to an hourly limit/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made it run the hash function 5000 times to ensure no one will brute force the IPs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The longer it takes to run a hash function, the harder it is to brute force. Since the database is completely public, any sensitive information stored, such as IP addresses, needs to be saved in a way cannot be retrieved by anyone. IPs must be saved to prevent spam, but the actual IP isn&apos;t needed, just a hash to compare against.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-javascript line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//hash the ip so no one can get it from the database&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hashedIP &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ip &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; globalSalt&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//hash it 5000 times, this makes it very hard to brute force&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hashCreator &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; crypto&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createHash&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sha512&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    hashedIP &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hashCreator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hashedIP&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;digest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;hex&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Next steps&lt;/h1&gt;
&lt;p&gt;I am now working on a port of this extension to Firefox. Once this is done, the extension will be available on both stores and be officially released.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/3&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/3&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/pull/4&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/pull/4&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Voting and Pseudo-Randomness | SponsorBlock | YouTube Sponsorship Segment Blocker]]></title><description><![CDATA[Repository https://github.com/ajayyy/SponsorBlock
https://github.com/ajayyy/SponsorBlockServer Voting A very important feature to make this…]]></description><link>https://blog.ajay.app/voting-and-pseudo-randomness-or-sponsorblock-or-youtube-sponsorship-segment-blocker/</link><guid isPermaLink="false">https://blog.ajay.app/voting-and-pseudo-randomness-or-sponsorblock-or-youtube-sponsorship-segment-blocker/</guid><pubDate>Thu, 18 Jul 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock&quot;&gt;https://github.com/ajayyy/SponsorBlock&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer&quot;&gt;https://github.com/ajayyy/SponsorBlockServer&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Voting&lt;/h1&gt;
&lt;p&gt;A very important feature to make this crowd-sourced system work and prevent bad actors is to implement voting.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pfdj2YXf-voting.gif&quot; alt=&quot;voting.gif&quot;&gt;&lt;/p&gt;
&lt;h3&gt;&quot;Similar Sponsors&quot;&lt;/h3&gt;
&lt;p&gt;A sponsor message at the beginning of the video shouldn&apos;t compete with one at the end of a video. To make votes matter, but not matter in some cases, the program tries to find &quot;similar sponsors&quot;. Similar sponsors are sponsor times that are contained inside of each other.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-javascript line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//list of sponsors that are contained inside eachother&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; similarSponsors &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; sponsorTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//see if the start time is located between the start and end time of the other sponsor time.&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; sponsorTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sponsorTimes&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; sponsorTimes&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sponsorTimes&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; sponsorTimes&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;//sponsor j is contained in sponsor i&lt;/span&gt;
            similarSponsors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These sponsors then are compared for votes, and only the best one is sent to the user.&lt;/p&gt;
&lt;h2&gt;But it can&apos;t be that simple&lt;/h2&gt;
&lt;p&gt;In a system like that, one sponsor would get a few votes, and then the rest of the sponsors would never appear again, and could never get votes. I decided on using a more fancy algorithm that used a weighted random distribution based on a formula.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/iRZkhc5X-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This formula makes small amount of votes (under 10), matter a lot, and makes the really large votes slowly not matter as much. This makes a newly submitted sponsor time always possible to be sent out to users to get votes.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-javascript line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; similarSponsorsGroups &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//once they have been added to a group, they don&apos;t need to be dealt with anymore&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; dealtWithSimilarSponsors &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;//create lists of all the similar groups (if 1 and 2 are similar, and 2 and 3 are similar, the group is 1, 2, 3)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; similarSponsors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dealtWithSimilarSponsors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//dealt with already&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;//this is the group of indexes that are similar&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; group &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; similarSponsors&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; similarSponsors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;group&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;similarSponsors&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; group&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;similarSponsors&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;//this is a similar group&lt;/span&gt;
            group&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;similarSponsors&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            group&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;similarSponsors&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            dealtWithSimilarSponsors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    similarSponsorsGroups&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;group&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;//remove duplicate indexes in group arrays&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; similarSponsorsGroups&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    uniqueArray &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; similarSponsorsGroups&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;item&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pos&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; self&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; pos&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    similarSponsorsGroups&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; uniqueArray&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The system creates groups of similar sponsors that are all similar to each other. For example, the first similar sponsor finding function might find groups such as &lt;code class=&quot;language-text&quot;&gt;[[1, 2], [5, 2], [7, 3]]&lt;/code&gt;, these get grouped up into groups based on duplicates into an array like this &lt;code class=&quot;language-text&quot;&gt;[[1, 2, 5, 2], [7, 3]]&lt;/code&gt;. The duplicates are then removed, making the groups of similar sponsors &lt;code class=&quot;language-text&quot;&gt;[[1, 2, 5], [7, 3]]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Out of each of these groups, only one sponsor is chosen to be sent out to the user. This function finds a weighted random choice for each group in the array.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-javascript line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//gets the getWeightedRandomChoice for each group in an array of groups&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getWeightedRandomChoiceForArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;choiceGroups&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; weights&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; finalChoices &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//the indexes either chosen to be added to final indexes or chosen not to be added&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; choicesDealtWith &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//for each choice group, what are the sums of the weights&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; weightSums &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; choiceGroups&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//find weight sums for this group&lt;/span&gt;
        weightSums&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; choiceGroups&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;//only if it is a positive vote, otherwise it is probably just a sponsor time with slightly wrong time&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;weights&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;choiceGroups&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                weightSums&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;weightSums&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; weights&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;choiceGroups&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;//create a random choice for this group&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; randomChoice &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getWeightedRandomChoice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;choiceGroups&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; weights&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        finalChoices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;randomChoice&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;finalChoices&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; randomChoice&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;choicesDealtWith&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            choicesDealtWith&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;randomChoice&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;choicesDealtWith&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;finalChoices&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; finalChoices&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;choicesDealtWith&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; choicesDealtWith&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;weightSums&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; weightSums
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The randomly weighted choice is calculated in this function:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-javascript line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//gets a weighted random choice from the indexes array based on the weights.&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//amountOfChoices speicifies the amount of choices to return, 1 or more.&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//choices are unique&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getWeightedRandomChoice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;choices&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; weights&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; amountOfChoices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;amountOfChoices &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; choices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//not possible, since all choices must be unique&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; finalChoices &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; choicesDealtWith &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; sqrtWeightsList &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//the total of all the weights run through the cutom sqrt function&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; totalSqrtWeights &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; choices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//multiplying by 10 makes around 13 votes the point where it the votes start not mattering as much (10 + 3)&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//The 3 makes -2 the minimum votes before being ignored completely&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//https://www.desmos.com/calculator/ljftxolg9j&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//this can be changed if this system increases in popularity.&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; sqrtVote &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;weights&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;choices&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        sqrtWeightsList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sqrtVote&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        totalSqrtWeights &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; sqrtVote&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;//this index has now been deat with&lt;/span&gt;
        choicesDealtWith&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;choices&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;//iterate and find amountOfChoices choices&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; randomNumber &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//this array will keep adding to this variable each time one sqrt vote has been dealt with&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//this is the sum of all the sqrtVotes under this index&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; currentVoteNumber &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; sqrtWeightsList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;randomNumber &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; currentVoteNumber &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; totalSqrtWeights &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; randomNumber &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;currentVoteNumber &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; sqrtWeightsList&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; totalSqrtWeights&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;//this one was randomly generated&lt;/span&gt;
            finalChoices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;choices&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;//remove that from original array, for next recursion pass if it happens&lt;/span&gt;
            choices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;splice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;//add on to the count&lt;/span&gt;
        currentVoteNumber &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; sqrtWeightsList&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;//add on the other choices as well using recursion&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;amountOfChoices &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; otherChoices &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getWeightedRandomChoice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;choices&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; weights&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; amountOfChoices &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;finalChoices&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//add all these choices to the finalChoices array being returned&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; otherChoices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            finalChoices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;otherChoices&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;finalChoices&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; finalChoices&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;choicesDealtWith&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; choicesDealtWith
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This makes it so that the user gets only one of the sponsors, but some users might get some lower rated sponsors, to give them a chance of getting more ratings.&lt;/p&gt;
&lt;h3&gt;But won&apos;t people be frustrated getting terrible submissions?&lt;/h3&gt;
&lt;p&gt;See this formula again.
&lt;img src=&quot;https://files.steempeak.com/file/steempeak/ajayyy/iRZkhc5X-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Because of this formula, if a sponsor has a number of votes (x) that is -3, their chance will be zero. Below that, it is an undefined result, so before feeding the numbers to this function, those are weeded out.&lt;/p&gt;
&lt;p&gt;-2 was chosen since it allows 2 people to accidentally click downvote before the submission gets ignored entirely. I feel it is a good balance to prevent troll votes from making all times disappear. Of course, this could be modified a bit in the future.&lt;/p&gt;
&lt;h2&gt;Preventing user from getting bombarded with skips&lt;/h2&gt;
&lt;p&gt;To prevent there being too many non similar sponsor times, after all these calculations have taken place, if there are more than 4 sponsor times to send out, it gets the best 4 using the weighted random function.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;finalSponsorTimeIndexes = getWeightedRandomChoice(finalSponsorTimeIndexes, votes, 4).finalChoices;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To be more fair to sponsor times with multiple similar sponsor times, the sum of all the positive votes on similar sponsor times is used as the weight for the chosen sponsor time.&lt;/p&gt;
&lt;h5&gt;Notice&lt;/h5&gt;
&lt;p&gt;The server is temporarily down and should be back up in a few days. Better uptime will happen once this project has reached beta, which should be in a week or two.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock/pull/2&quot;&gt;https://github.com/ajayyy/SponsorBlock/pull/2&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/pull/2&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/pull/2&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/pull/3&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/pull/3&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Video Player Controls and Visual Overhaul | YouTube SponsorBlocker]]></title><description><![CDATA[Repository https://github.com/ajayyy/SponsorBlocker
https://github.com/ajayyy/SponsorBlockServer image.png Client Changed the way it detects…]]></description><link>https://blog.ajay.app/video-player-controls-and-visual-overhaul-or-youtube-sponsorblocker/</link><guid isPermaLink="false">https://blog.ajay.app/video-player-controls-and-visual-overhaul-or-youtube-sponsorblocker/</guid><pubDate>Sat, 13 Jul 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlocker&quot;&gt;https://github.com/ajayyy/SponsorBlocker&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer&quot;&gt;https://github.com/ajayyy/SponsorBlockServer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/37GSA0wm-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Client&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Changed the way it detects when a page is not YouTube and prevented lastError.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before, it attempted to communicate with the tab right when the popup was open. However, if the tab was not a youtube.com tab, it would not have the content script added to receive the communications. This was fixed by only sending a message when the popup knows the tab is ready.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made it not load the extension on the YouTube homepage and channel pages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These pages don&apos;t have videos that need sponsors removed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added nice buttons to the popup&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Made the sponsorships starts button update with the clear times button.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you hit the &quot;Sponsorship Starts Now&quot; button, it transforms into &quot;Sponsorship Ends Now&quot;, this should update whenever a change in what has been recorded has happened.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made the button&apos;s nice on the notice and added a notice about the timeout.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/qEfElyR4-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made it generate and submit a userID defining this user.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It uses a uuid generator and generates a uuid only if needed.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-javascript line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getUserID&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userID &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userID&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;//if it is not cached yet, grab it from storage&lt;/span&gt;
  chrome&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;storage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;local&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;userID&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; userIDStorage &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;userID&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userIDStorage &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      userID &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; userIDStorage&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userID&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;//generate a userID&lt;/span&gt;
      userID &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;generateUUID&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      
      &lt;span class=&quot;token comment&quot;&gt;//save this UUID&lt;/span&gt;
      chrome&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;storage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;local&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string-property property&quot;&gt;&quot;userID&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; userID&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userID&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Made time have a zero in front when it is less than 10 seconds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Made submit times not appear when no end time was specified.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This makes the &quot;Submit Sponsor Times&quot; button only be visible when something can be submitted to the database.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added button on YouTube player and new icons to support that&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/5khiydEb-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;By being a white icon, it does not stand out when in the player and looks normal.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added option to hide the video player controls button in the popup.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Made options a hidden section in the popup.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/Rt9rjED1-hidden20options.gif&quot; alt=&quot;hidden options.gif&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Server&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added support for receiving a userID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Made the server save a hash of their ip with the data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added global salt for hashed ips&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added duplication check.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Made it save the time the data was submitted (in unix time)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Made error codes returned by the sever intuitive&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It now reports correct codes such as error code 429 for a ratelimit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made it so that each user can only submit 4 sponsorship segments per video&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This should help prevent spammers and trolls.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/10O2qZxV-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlocker/pull/1&quot;&gt;https://github.com/ajayyy/SponsorBlocker/pull/1&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/pull/1&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/pull/1&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[SponsorBlock | Blocking YouTube Sponsorship Segments]]></title><description><![CDATA[Repository https://github.com/ajayyy/SponsorBlock
https://github.com/ajayyy/SponsorBlockServer image.png SponsorBlock SponsorBlock is an…]]></description><link>https://blog.ajay.app/sponserblocker-or-blocking-youtube-sponsorship-segments/</link><guid isPermaLink="false">https://blog.ajay.app/sponserblocker-or-blocking-youtube-sponsorship-segments/</guid><pubDate>Wed, 10 Jul 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlock&quot;&gt;https://github.com/ajayyy/SponsorBlock&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer&quot;&gt;https://github.com/ajayyy/SponsorBlockServer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/bFn6a9nb-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;SponsorBlock&lt;/h1&gt;
&lt;p&gt;SponsorBlock is an extension that will skip over sponsored segments of YouTube videos. SponsorBlock is a crowdsourced browser extension that let&apos;s anyone submit the start and end time&apos;s of sponsored segments of YouTube videos. Once one person submits this information, everyone else with this extension will skip right over the sponsored segment.&lt;/p&gt;
&lt;p&gt;In summary, it&apos;s a crowd-sourced adblock for sponsored sections of YouTube videos.&lt;/p&gt;
&lt;h1&gt;Server&lt;/h1&gt;
&lt;p&gt;The backend server code is available here: &lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer&quot;&gt;https://github.com/ajayyy/SponsorBlockServer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is a simple Sqlite database that will hold all the timing data.&lt;/p&gt;
&lt;p&gt;To make sure that this project doesn&apos;t die, I have made the database publicly downloadable at &lt;a href=&quot;https://sponsor.ajay.app/database.db&quot;&gt;https://sponsor.ajay.app/database.db&lt;/a&gt;. So, you can download a backup or get archive.org to take a backup if you do desire.&lt;/p&gt;
&lt;p&gt;Hopefully this project can be combined with projects like &lt;a href=&quot;https://github.com/Sponsoff/sponsorship_remover&quot;&gt;this&lt;/a&gt; and use this data to create a neural network to predict when sponsored segments happen. That project is sadly abandoned now, so I have decided to attempt to revive this idea.&lt;/p&gt;
&lt;h1&gt;Previous attempt&lt;/h1&gt;
&lt;p&gt;In January, a group of people tried to do a similar thing, but instead of using other people&apos;s submissions to skip sponsor segments for everyone, they ran the data through a neural network. &lt;a href=&quot;https://github.com/Sponsoff&quot;&gt;Here are their projects&lt;/a&gt;. Sadly, this project was abandoned.&lt;/p&gt;
&lt;p&gt;I hope to try to accomplish some of their goals, and maybe use some of data collected with this extension to power a neural network or algorithm of some sort as well.&lt;/p&gt;
&lt;p&gt;This project is partially based off of &lt;a href=&quot;https://github.com/OfficialNoob/YTSponsorSkip&quot;&gt;this experimental extension&lt;/a&gt;. That extension has the basic video skipping functionality, but I added everything else.&lt;/p&gt;
&lt;h1&gt;Current Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Sponsor time submission: Click on the extension and select when a sponsor segment ends, find the time it finishes, and click on the extension again. Hit submit and this will be sent to the server.&lt;/li&gt;
&lt;li&gt;Ability to get sponsor timings already in the database and automatically skip over them&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/gMETqVsH-sponsor20skipped.gif&quot; alt=&quot;sponsor skipped.gif&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Small ui that appears that allows you to skip back and watch it if it was wrong&lt;/li&gt;
&lt;li&gt;Warning that appears if you go to another page after selecting timings, but never submitting them. You will be reminded to submit them so that your time is not wasted.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/DFcKksGr-skip20notice.gif&quot; alt=&quot;skip notice.gif&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Warns you when you are not on YouTube or the content script hasn&apos;t loaded yet &lt;img src=&quot;/images/5xwNANHl-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/li&gt;
&lt;li&gt;Decimal precision timings&lt;/li&gt;
&lt;li&gt;Correct menus hide when they should&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Public database&lt;/h1&gt;
&lt;p&gt;I don&apos;t want this to end up like the previous project, so I am making the database easily downloadable for anyone, so if I ever stop supporting this, someone should have a copy of the databse, if not archive.org.&lt;/p&gt;
&lt;p&gt;Download it at &lt;a href=&quot;https://sponsor.ajay.app/database.db&quot;&gt;https://sponsor.ajay.app/database.db&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Technology Snack&lt;/h1&gt;
&lt;p&gt;The server is built with Node.js and uses Sqlite as a database.&lt;/p&gt;
&lt;p&gt;The client is a chrome extension that contacts the server to get the timings.&lt;/p&gt;
&lt;h1&gt;Current Videos in the DB&lt;/h1&gt;
&lt;p&gt;Just four right now, fBxtS9BpVWs, FfgT6zx4k3Q, uqKGREZs6-w, UjtOGPJ0URM. (YouTube video IDs)&lt;/p&gt;
&lt;h1&gt;Plans&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Make it look nicer&lt;/li&gt;
&lt;li&gt;Get an icon&lt;/li&gt;
&lt;li&gt;Reputation system to prevent abuse&lt;/li&gt;
&lt;li&gt;Upvote/downvote system to prevent abuse&lt;/li&gt;
&lt;li&gt;Support multiple people submitting duplicate times and resolve those issues&lt;/li&gt;
&lt;li&gt;Controls from the webpage itself, opening up the popup is annoying&lt;/li&gt;
&lt;li&gt;Find a way to load some of the database from the previous project. Part of the database that didn&apos;t use timings and instead used captions is inside of one of the git projects. This could be fairly complex due to having to convert the captions to timings. I don&apos;t know how accurate or recent this data is, and I don&apos;t know how much data is available.&lt;/li&gt;
&lt;li&gt;Firefox extension&lt;/li&gt;
&lt;li&gt;Put it on the chrome web store&lt;/li&gt;
&lt;li&gt;Try getting it to work with a algorithm based on captions&lt;/li&gt;
&lt;li&gt;Get some people to start submitting sponsor timings&lt;/li&gt;
&lt;li&gt;Reminder that the extension is still there&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Git diff&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/SponsorBlocker/compare/old...master&quot;&gt;https://github.com/ajayyy/SponsorBlocker/compare/old...master&lt;/a&gt; (extension)
&lt;a href=&quot;https://github.com/ajayyy/SponsorBlockServer/commits/master&quot;&gt;https://github.com/ajayyy/SponsorBlockServer/commits/master&lt;/a&gt; (server)&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Planets | A Multiplayer Planet Gravity Game]]></title><description><![CDATA[Repository https://github.com/ajayyy/Planets What is this This is multiplayer planet-based game. There are planets, circles with a…]]></description><link>https://blog.ajay.app/planets-or-a-multiplayer-planet-gravity-game/</link><guid isPermaLink="false">https://blog.ajay.app/planets-or-a-multiplayer-planet-gravity-game/</guid><pubDate>Mon, 17 Jun 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/Planets&quot;&gt;https://github.com/ajayyy/Planets&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;What is this&lt;/h1&gt;
&lt;p&gt;This is multiplayer planet-based game. There are planets, circles with a gravitational pull, that pull all players towards them. When a player collides with the planet, they bounce off. You can press W and A to move left and right relative to the normal of the planet position you are currently in. You can also click on-screen to launch a projectile. Launched projectile will fly in the direction you point and also get pulled in by gravity, but they will not bounce off the planet. When you launch a projectile, you get pushed in the other direction (equal and opposite force). The is another way to move. When a projectile collides with a player, they bounce off of each other, allowing one player to launch a projectile at another player to push them around.&lt;/p&gt;
&lt;p&gt;At the moment, there is no game, however you can move around and shoot other players. Theoretically, it can support as many players as you need (or hit the integer cap of 2.14 billion).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/ZZHBS4fX-planets20demo201.gif&quot; alt=&quot;planets demo 1.gif&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Instructions to run&lt;/h1&gt;
&lt;p&gt;Launch the server project to get started, then launch as many instances of Planet-desktop as you need. By default, the clients currently connect to “localhost”. Beware of joining two players without moving the first one from the start location, as they start in the same position, they could get stuck in eachother.&lt;/p&gt;
&lt;p&gt;Press A and D to move around and click to shoot projectiles. Everything should sync and be visible on all clients.&lt;/p&gt;
&lt;h1&gt;Technology Stack&lt;/h1&gt;
&lt;p&gt;This is written in Java with the library Lib-GDX. Lib-GDX is an open-source library that wraps LWJGL function and allows you to export you Java game into many more platforms such as even HTML5/WebGL. LWJGL is a library that is adds Java functions for OpenGL calls.&lt;/p&gt;
&lt;p&gt;The networking is handled with a library called Java-WebSockets (&lt;a href=&quot;https://github.com/TooTallNate/Java-WebSocket&quot;&gt;https://github.com/TooTallNate/Java-WebSocket&lt;/a&gt;). Websockets are used since they are the only network type supported in JavaScript, which I am planning on porting this to later (with Lib-GDX’s WebGL export).&lt;/p&gt;
&lt;h1&gt;Main features so far&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;All of the non client or server specific code is kept in a base project, that the two other projects extend. This is really nice for organization and removes duplicate code&lt;/li&gt;
&lt;li&gt;Game updates are run at exactly the same speed on all clients by making sure to repeat frames if necessary. This is required to ensure that all clients and the server run identical simulations and don’t get off.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is done by running a for loop that will loop through the required number of updates before rendering to keep going at exactly 60 fps.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When a projectile is launched by one player at frame x, then next client receives the info about what frame it was launched at and will go back in time to replay that action. This makes sure that all users’ inputs are handled instantly, no matter their internet connection to the server. Normally, games don’t trigger the action until the server gets info about it. That makes it feel delayed when you do stuff. This way is much better in my opinion, but way less used.&lt;/li&gt;
&lt;li&gt;Planet gravity
&lt;ul&gt;
&lt;li&gt;This took time to get perfect&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Planet bouncing physics
&lt;ul&gt;
&lt;li&gt;The players are able to bounce off the side of a planet and keep part of their velocity.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Queue code to make sure that all frame repeating code is run on the frame to be able to pause all calculations to resimulate frames. This needs to be on the same thread because otherwise two threads will be modifying the same variables and it would be a disaster.&lt;/li&gt;
&lt;li&gt;Old states of all players (in future, should be all physics objects) are saved to make resimulation of frames possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Issues that will be fixed soon:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Not a perfect simulation yet, the clients sometimes get a little off from eachother&lt;/li&gt;
&lt;li&gt;Non perfect mathematics (differentials)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My main goal with this project was to attempt to estimate in code as little as possible. With planet gravity, the force of the gravity depends on the position relative to the planet. This can be estimated using a euler method by simply adding the acceleration to the velocity, then the velocity to the position every timestep. I wanted to try and make this perfect by creating a differential equation to solve this algebraically. The rearranged gravity equation is   for x and   for y with subscript p representing the planet and r representing the real position. I attempted to convert these to formulas that could get the exact x and y position variable for any t, time variable. Sadly, these equations have no closed form solution, so I ended up wasting a lot of time on this journey, though I did learn a lot.&lt;/p&gt;
&lt;p&gt;This issue sadly can never be fixed, but instead a fixed inaccuracy can be used on all clients. This involves using the same timestep on all client, making the accuracy the same for all simulations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No frame simulation for left and right movement yet (only projectiles)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was not able to get enough time to run the frame simulation for left and right movements yet, so for now this issue can be fixed by the fact that server position checks have been added temporarily.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ran out of time bug fixing&lt;/li&gt;
&lt;li&gt;Resimulation does not deal with projectiles yet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When resimulating frames, it goes through the old states of all players (saved every frame) and sets their position to the state they were in that frame. There are no old states saved for projectile positions yet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Resimulation does not deal with players connecting and disconnecting yet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When a player leaves, they are removed from the player list. This makes all there old states get deleted. Ideally, there should be another list containing all the old states of the player array.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Really short server messages sometimes don’t send&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When a player disconnects, the server sends out a message saying “PD [id]”, this message is very short so sometimes the TCP network will not send it but instead wait for another message to be sent before sending it. This can be fixed by padding the message, sadly I ran out of time for that. Since it only affects disconnecting players and is resolved when any keys get pressed, it has little effect.&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/&quot;&gt;https://github.com/ajayyy/&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Now On The World Wide Web | Scouting Data Summarizer]]></title><description><![CDATA[Repository https://github.com/ajayyy/LakeEffectScoutingSummary What is this This is a reader for the scouting app developed for FIRST…]]></description><link>https://blog.ajay.app/now-on-the-world-wide-web-or-scouting-data-summarizer/</link><guid isPermaLink="false">https://blog.ajay.app/now-on-the-world-wide-web-or-scouting-data-summarizer/</guid><pubDate>Sun, 05 May 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/LakeEffectScoutingSummary&quot;&gt;https://github.com/ajayyy/LakeEffectScoutingSummary&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;What is this&lt;/h3&gt;
&lt;p&gt;This is a reader for the scouting app developed for FIRST Robotics Team 2708. It is used to scout other robots at the competition. The data is sent from 6 client apps to the server over bluetooth throughout the course of the events. The server must manage and put everything together. Scouting is necessary to be able to change your team&apos;s strategy and know what teams to pick to join your alliance. This reader converts the complicated database information into something easily understandable.&lt;/p&gt;
&lt;h3&gt;About this year&apos;s game&lt;/h3&gt;
&lt;p&gt;In this years game, teams must score &quot;cargo&quot; into holes in rockets. If the cargo is put in without a hatch panel, then it will fall out. The hatch panels must be fastened on to the rockets and cargo ship to prevent the cargo from falling out.
&lt;img src=&quot;/images/Kfvwvueh-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Big Changes&lt;/h1&gt;
&lt;p&gt;The reader now works on the web, not just electron. This means I can access the data from any device, even my phone. This makes it much easier to use this data when talking to other robotics teams.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/e2i1Kstw-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reorganised files to make main.js less cluttered.&lt;/li&gt;
&lt;li&gt;Added hidden extra info available on click. Helps with LakeEffectRobotics/LakeEffectScoutingApp#281&lt;/li&gt;
&lt;li&gt;Added clicking cursor on clickable items&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is very nice UX wise, this just makes it so that when you hover over a clickable item, the clicking pointer appears.&lt;/p&gt;
&lt;p&gt;It simply uses the &lt;code class=&quot;language-text&quot;&gt;cursor: pointer;&lt;/code&gt; property.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added search functionality to new custom search panel. Also changed some of the single quote strings to double quotes for consistency reasons.
&lt;ul&gt;
&lt;li&gt;It receives the labels with ipc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Made the search functionality better by switching to onkeyup&lt;/li&gt;
&lt;li&gt;Added ability to select and deselect search terms&lt;/li&gt;
&lt;li&gt;Added a custom info section allowing you to see a table view of the raw data.&lt;/li&gt;
&lt;li&gt;You can select and deselect items, and they will appear/disappear&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is the custom summery viewer:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/qwJm5gJs-custom20info.gif&quot; alt=&quot;custom info.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;This allows you to see all the raw data for this robot as if you were looking at the spreadsheet in an even easier way. The items close and open when clicking, and you can even search through the data names easily.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added what match the maximum performance happened in.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This allows you to see when they peaked. If they peaked in a later match, it&apos;s a good sign.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vkH7hJCl-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added ability to get straight to the raw data when clicking on the summarized data.
&lt;ul&gt;
&lt;li&gt;The correct raw data is pulled up and the window automatically scrolls down to the custom data section.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a very cool feature. This let&apos;s you get to the correct raw data very easily.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/B2yQ9vrQ-custom20info20skip.gif&quot; alt=&quot;custom info skip.gif&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added ability to get what position a robot is in for averages of statistics.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is very useful. If a robot can do 5 cycles of hatch for example, it&apos;s useful to see how good they are versus the competition. Now the program finds what position they are in and writes &quot;Top X&quot;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/IBPXIxIS-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This is done using the &lt;code class=&quot;language-text&quot;&gt;generateStats&lt;/code&gt; function.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-text line-numbers&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;//will generate the placement statistics for each robot
//Ex. sorted list of top hatch robots, sorted list of top cargo bots
//sortByAverage: true if sorting by average, false if sorting by max
function generateStats(labels, robots, actionSummaryLabels, sortedRobotsByStat, sortByAverage) {
    //the list of statistics to look at
    let statistics = [];
    for (let i = 0; i &amp;lt; actionSummaryLabels.length; i++) {
        statistics.push(actionSummaryLabels[i] + &quot; Hit&quot;);
    }

    for (let i = 0; i &amp;lt; statistics.length; i++) {
        let columnIndex = getColumnIndex(labels, statistics[i]);

        let sortedRobots = [];
        let robotsLeft = Array.from(robots);
        while (robotsLeft.length &gt; 0) {
            //robots performing the best this round
            let bestRobots = [];
            let highestPerformance = -1;

            for (let robotNumber = 0; robotNumber &amp;lt; robotsLeft.length; robotNumber++) {
                let dataPoints = [];
                for (let dataPoint = 1; dataPoint &amp;lt; robotsLeft[robotNumber].data.length; dataPoint++) {
                    //not just an empty line
                    if (robotsLeft[robotNumber].data[dataPoint].length &gt; 1) {
                        dataPoints.push(robotsLeft[robotNumber].data[dataPoint][columnIndex]);
                    }
                }
                let performance = 0;
                if (sortByAverage) {
                    performance = getAverageItem(dataPoints);
                } else {
                    //sort by max otherwise
                    performance = getMaxItems(dataPoints)[0][0];
                }
                let robotIndex = robots.indexOf(robotsLeft[robotNumber]);

                //if it&apos;s more, set it to be this robot
                //if it&apos;s the same, add this robot to the list (it&apos;s a tie)
                if (performance &gt; highestPerformance) {
                    bestRobots = [robotIndex];
                    highestPerformance = performance;
                } else if (performance === highestPerformance) {
                    bestRobots.push(robotIndex);
                }
            }

            //these are the best robots, add them to the list together as they are tied
            sortedRobots.push(bestRobots);

            //remove these robots from robots left
            for (let q = 0; q &amp;lt; bestRobots.length; q++) {
                robotsLeft.splice(robotsLeft.indexOf(robots[bestRobots[q]]), 1);
            }
        }
        sortedRobotsByStat[i] = sortedRobots;
    }
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This sorted data is then checked through later when making the summaries.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-text line-numbers&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;let averageStanding = getPositionInSortedList(robots, averageSortedRobotsByStat, currentRobotNumber, searchTermIndex);
    fullSummary += &quot; | Top &quot; + averageStanding + &quot;&amp;lt;br/&gt;&quot;;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-text line-numbers&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function getPositionInSortedList(robots, sortedRobotsByStat, robotNumber, statIndex) {
    let position = 0;

    //find robot index from robot number
    let robotIndex = 0;
    for (let i = 0; i &amp;lt; robots.length; i++) {
        if (robots[i].robotNumber === robotNumber) {
            robotIndex = i;
        }
    }

    for (let i = 0; i &amp;lt; sortedRobotsByStat[statIndex].length; i++) {
        if (!sortedRobotsByStat[statIndex][i].includes(robotIndex)) {
            position += sortedRobotsByStat[statIndex][i].length;
        } else {
            //the robot has been found
            break;
        }
    }

    return position;
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Created the first server version of the reader. This version runs on a server and passes the data over https calls.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is the most useful update. Now, the whole program works using api calls. All the normal data is recieved in json by using api calls such as &lt;a href=&quot;https://scout.ajay.app/getLastUpdated&quot;&gt;https://scout.ajay.app/getLastUpdated&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The html files now check if node is installed before choosing to use API calls or RPC (electron&apos;s communication method).&lt;/p&gt;
&lt;p&gt;Almost all calculations are done server-side to not drain the client&apos;s battery.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added scouting data uploading system to the server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To make it easier to get updated data on the site throughout the day, a data uploading page was added.&lt;/p&gt;
&lt;p&gt;It takes data uploaded and reloads all the data in the program.&lt;/p&gt;
&lt;p&gt;It will only upload data if the correct password is inputted to prevent spam and sends the user to an &quot;Upload Failed&quot; page if an issue happened.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-text line-numbers&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function upload(req, res, fileType, folder) {
    try {
        var form = new formidable.IncomingForm();
        form.maxFileSize = 1000 * 1024 * 1024 * 1024;

        let files = [];
        let field;
    
        form.on(&apos;field&apos;, function(fieldName, value) {
            if (fieldName == &quot;password&quot;) {
                field = value;
            }
        });
    
        form.on(&apos;file&apos;, function(field, file) {
            files.push(file);
        });
    
        form.on(&apos;end&apos;, function() {
            let success = false;
            for (let i = 0; i &amp;lt; files.length; i++) {
                if (field == loadedPassword &amp;amp;&amp;amp; files[i].name.endsWith(fileType)) {
                    try {
                        fs.copyFile(files[i].path, __dirname + folder + files[i].name, function(err) {  
                            if (err) {
                                console.error(err);
                            }

                            if (folder == &quot;/data/&quot; &amp;amp;&amp;amp; i == files.length - 1) {
                                //then reload the data
                                setTimeout(loadData, 3000);
                            }
                        });
    
                        success = true;
                    } catch (err) {
                        console.log(err);
                        success = false;
                    }
                }
            }
    
            if (success) {
                res.redirect(&quot;success&quot;);
            } else {
                res.redirect(&quot;failed&quot;);
            }
        });
    
        form.parse(req);
    } catch(err) {
        console.log(err);
        res.redirect(&quot;failed&quot;);
    }
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/n2nEbzWb-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added a multi view page&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This page features 6 versions of the website. Since this competition has matches with 3 robots against another 3 robots, this allows strategic planning to happen quickly.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/uc6Zz0XD-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made the desktop app be able to pull periodically from the server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Having a constant internet connection at the competition is rare. So, I added a feature to allow the desktop program to let you pull data from the server when you are on an internet connection. You can the use this data when you are offline, making you not 100% reliant on the server, but still get the latest robot data updates.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made the window title contain the robot number&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a nice feature since it let&apos;s you see which tab is for which robot when opening multiple tabs to compare data.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/LakeEffectScoutingSummary/pull/3&quot;&gt;https://github.com/ajayyy/LakeEffectScoutingSummary/pull/3&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/LakeEffectScoutingSummary/pull/4&quot;&gt;https://github.com/ajayyy/LakeEffectScoutingSummary/pull/4&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/LakeEffectScoutingSummary/pull/5&quot;&gt;https://github.com/ajayyy/LakeEffectScoutingSummary/pull/5&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Scouting Data Summarizer | Server-Side Magic]]></title><description><![CDATA[Repository https://github.com/ajayyy/LakeEffectScoutingSummary/ What is this This is a reader for the scouting app developed for FIRST…]]></description><link>https://blog.ajay.app/scouting-data-summarizer-or-server-side-magic/</link><guid isPermaLink="false">https://blog.ajay.app/scouting-data-summarizer-or-server-side-magic/</guid><pubDate>Wed, 17 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/LakeEffectScoutingSummary/&quot;&gt;https://github.com/ajayyy/LakeEffectScoutingSummary/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;What is this&lt;/h3&gt;
&lt;p&gt;This is a reader for the scouting app developed for FIRST Robotics Team 2708. It is used to scout other robots at the competition. The data is sent from 6 client apps to the server over bluetooth throughout the course of the events. The server must manage and put everything together. Scouting is necessary to be able to change your team&apos;s strategy and know what teams to pick to join your alliance. This reader converts the complicated database information into something easily understandable.&lt;/p&gt;
&lt;h3&gt;About this year&apos;s game&lt;/h3&gt;
&lt;p&gt;In this years game, teams must score &quot;cargo&quot; into holes in rockets. If the cargo is put in without a hatch panel, then it will fall out. The hatch panels must be fastened on to the rockets and cargo ship to prevent the cargo from falling out.
&lt;img src=&quot;https://files.steempeak.com/file/steempeak/ajayyy/Kfvwvueh-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Added more statistics&lt;/h1&gt;
&lt;p&gt;I added a calculated robot death rate (when the robot gets disconnect or shutdown due to some issue).&lt;/p&gt;
&lt;p&gt;Added a calculated defense, tipped, and climb success/fail rate for level 1 climb and level 2 climb.&lt;/p&gt;
&lt;p&gt;The climb rate is has to take into account the column next to it as well, since it could be a successful climb or a failed climb.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-java line-numbers&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//find the amount of times a certain string has been saved in a column in a percentage&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//Ex. number of successful level 2 climb&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//only if the first search term AND the second are true (in the current column and the next column)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//Ex. First column: &quot;level 2&quot;, second column: &quot;success&quot;&lt;/span&gt;
function &lt;span class=&quot;token function&quot;&gt;getColumnTextItems&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;currentRobotNumber&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; labels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; robots&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; collumnTerm&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; rowSearch&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; nextColumnSearch&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//find average of this column&lt;/span&gt;
    let column &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getColumnIndex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;labels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; collumnTerm&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    let items &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;let currentRobot &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; currentRobot &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; robots&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; currentRobot&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;robots&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;currentRobot&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;robotNumber &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; currentRobotNumber&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;//all the matches for this robot&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;//starts at 1 to skip the labels&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;let matchNum &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; matchNum &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; robots&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;currentRobot&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; matchNum&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token comment&quot;&gt;//otherwise it&apos;s just a line break at the end of the file&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;robots&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;currentRobot&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;matchNum&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;robots&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;currentRobot&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;matchNum&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;column&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; rowSearch &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                        robots&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;currentRobot&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;matchNum&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;column &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nextColumnSearch&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                        items&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                        items&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; items&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Average ratings were also added.&lt;/p&gt;
&lt;p&gt;Starting position, starting platform and the starting object were also added in another section. This information isn&apos;t 100% needed, so it is hidden by default, but can be seen by clicking on it.&lt;/p&gt;
&lt;h1&gt;Server-side calcluations&lt;/h1&gt;
&lt;p&gt;Before, sometimes very simple operations (reading and modifying an array), were taking a very long time. I realized this was because I was running everything on the main thread.&lt;/p&gt;
&lt;p&gt;In electron, there is the server-side JavaScript and the JavaScript running in the web browser, the JavaScript running in the web browser is heavily throttled. Now, all the long calculations have been moved to the server-side and the two code bases communicate over ipc.&lt;/p&gt;
&lt;p&gt;To send data from the client:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-js line-numbers&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;electron&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ipcRenderer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;createOverallSummary&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; currentRobotNumber&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To receive the response:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-js line-numbers&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;electron&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ipcRenderer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;showOverallSummary&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;overallSummary&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerHTML &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The server-side code can then callback with:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-js line-numbers&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sender&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;showOverallSummary&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;New processing speed:
&lt;img src=&quot;/images/fwBATP1S-instant20processing.gif&quot; alt=&quot;instant processing.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;Old slow speed:
&lt;img src=&quot;/images/WtkLMpLw-slow20processing.gif&quot; alt=&quot;slow processing.gif&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Added fractions alongside the percentages&lt;/h1&gt;
&lt;p&gt;Now, whenever there is a percentage, it also shows the fraction that made it (because sometimes those can be more understandable). For example, when showing success rate, it will show 80% along with 8/10 (10 total matches).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/XKOaJCHh-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Made pressing enter on the textbox load data&lt;/h1&gt;
&lt;p&gt;Before you needed to hit load data, this makes it a lot easier to get data quickly&lt;/p&gt;
&lt;h1&gt;Made the robot number text box autofocus&lt;/h1&gt;
&lt;p&gt;Now, when the program is started, the text box is already focused ready for you to type into it.&lt;/p&gt;
&lt;h1&gt;Made all the decimal place numbers look nicer&lt;/h1&gt;
&lt;p&gt;They now use &lt;code class=&quot;language-text&quot;&gt;.toFixed(2)&lt;/code&gt; to keep less decimal places and not look unnecessarily long.&lt;/p&gt;
&lt;h1&gt;Made the image size more dynamic&lt;/h1&gt;
&lt;p&gt;Now it changes based on window size&lt;/p&gt;
&lt;h1&gt;Comments display&lt;/h1&gt;
&lt;p&gt;The comments in the scouting data are now displayed, along with the match they are from and who made the comment.&lt;/p&gt;
&lt;p&gt;The comments in the database always had some placeholder characters such as &lt;code class=&quot;language-text&quot;&gt;|c&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;|q&lt;/code&gt; referring to &lt;code class=&quot;language-text&quot;&gt;,&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;&quot;&lt;/code&gt;. These are finally viewable in the way they should be, as the program now converts them to their proper symbol.&lt;/p&gt;
&lt;p&gt;This was put in place to prevent issues when data is transferred in the companion scouting app.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/9UIrjWwL-image.png&quot; alt=&quot;image.png&quot;&gt;
(Names blanked out)&lt;/p&gt;
&lt;h1&gt;Improved max performance algorithm&lt;/h1&gt;
&lt;p&gt;Instead of just showing the maximum successful object placements, and the maximum amount of failures, it tries to show the maximum performance of the robot.&lt;/p&gt;
&lt;p&gt;It looks for the most successes it&apos;s every done. If there is more than one match that has the maximum successes, it will look for the minimum failures in those matches. In this way, it finds the best performing matches.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-java line-numbers&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//find max&lt;/span&gt;
let hitMaxItems &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getMaxItems&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hitItems&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;//the miss amount in ONLY the matches where the maximum amount of items were places&lt;/span&gt;
let maxMissItems &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;let i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; hitMaxItems&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    maxMissItems&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;missItems&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;hitMaxItems&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//it will find the minimum misses in the matches where they scored the most (the best performance)&lt;/span&gt;
let missMinItems &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getMinItems&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxMissItems&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Sorted the match data&lt;/h1&gt;
&lt;p&gt;Before, the match data was just in the order the data was received, not in the chronological order. This is important when displaying comments.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/LakeEffectScoutingSummary/pull/2&quot;&gt;https://github.com/ajayyy/LakeEffectScoutingSummary/pull/2&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[More Improvements From Feedback | Android Development]]></title><description><![CDATA[Repository https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/
https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp…]]></description><link>https://blog.ajay.app/more-improvements-from-feedback-or-android-development/</link><guid isPermaLink="false">https://blog.ajay.app/more-improvements-from-feedback-or-android-development/</guid><pubDate>Sun, 07 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;What is this&lt;/h3&gt;
&lt;p&gt;This is a scouting app developed for FIRST Robotics Team 2708. It is used to scout other robots at the competition. The data is sent from 6 client apps to the server over bluetooth throughout the course of the events. The server must manage and put everything together. Scouting is nessesary to be able to change your team&apos;s strategy and know what teams to pick to join your alliance.&lt;/p&gt;
&lt;h3&gt;About this year&apos;s game&lt;/h3&gt;
&lt;p&gt;In this years game, teams must score &quot;cargo&quot; into holes in rockets. If the cargo is put in without a hatch panel, then it will fall out. The hatch panels must be fastened on to the rockets and cargo ship to prevent the cargo from falling out.
&lt;img src=&quot;https://files.steempeak.com/file/steempeak/ajayyy/Kfvwvueh-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Made threads close properly&lt;/h1&gt;
&lt;p&gt;Now the bluetooth threads nicely close when the app is closed. Before, they only shut down when the app was removed from the multitasking menu.&lt;/p&gt;
&lt;h1&gt;Added Scroll View to schedule viewer&lt;/h1&gt;
&lt;p&gt;The schedule viewer on the main page added in the last update can now scroll. This makes it possible to see more info on the schedule than before.&lt;/p&gt;
&lt;h1&gt;A more general statistic&lt;/h1&gt;
&lt;p&gt;Before, there was no general statistic about what happened to each game object (cargo and hatch) in total, only in each location. The app now exports a general statistic, which is more useful for quick analysis&lt;/p&gt;
&lt;h1&gt;Allowed some ratings to not be done&lt;/h1&gt;
&lt;p&gt;Some robots never use parts of their robot, but before the users were required to rate these places, now there is a did not intake button, and this button let&apos;s the rating not be filled (and greys it out)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/defd2UKG-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Forced Instructions&lt;/h1&gt;
&lt;p&gt;Some users were submitting empty data when a robot no-showed to their match. This is not what we want, we want no data to be submitted for that event. Now, there is a checkbox to specify if they no-showed.&lt;/p&gt;
&lt;p&gt;The checkbox doesn&apos;t actually do anything, but instead informs the user that they shouldn&apos;t be submitting the data. I think this is a very cool way to implement instructions without writing paragraphs onto the app&apos;s pages.&lt;/p&gt;
&lt;h1&gt;View schedule anywhere&lt;/h1&gt;
&lt;p&gt;The schedule viewer now allows you to view it in the main app, instead of just at the beginning. This is a feature that was requested a lot.&lt;/p&gt;
&lt;h1&gt;Option panel on the alert&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/5HqKTJMJ-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This alert to select a robot is presented at the beginning before scouting. Due to it being an &lt;code class=&quot;language-text&quot;&gt;AlertDialog&lt;/code&gt; in Android, it was very hard to do anything while in this view, but now I added an options menu that can be displayed in this alert. This allows the user to return back to the menu without restarting the app and view the schedule straight from there.&lt;/p&gt;
&lt;h1&gt;Removed match number cap&lt;/h1&gt;
&lt;p&gt;Now that there is automated schedule, this is not needed. Originally, the match number was capped at 100, to prevent people from accidentally typing in robot numbers in this field (and robot numbers are typically 4 digits). This was a good workaround for the time, but now the robot numbers are automatically assigned, making it a lot easier.&lt;/p&gt;
&lt;h1&gt;Made scheduling more fair&lt;/h1&gt;
&lt;p&gt;When creating a schedule for when users have shifts on and off scouting (watching and recording data on the robots in the competition), the app used to just put the person off that has been on for the longest. However, there are usually multiple people who have been on for the same amount of time, making some people always just end up at the bottom since they are sorted by alphabetical order (If people have the same time on, they aren&apos;t reshuffled around).&lt;/p&gt;
&lt;p&gt;Now, the app takes into account the amount of times each user has taken an extra shift (not switched off when some other people have). This number is used as a second sorting number, to sort the users with the same time on.&lt;/p&gt;
&lt;p&gt;This causes the extra shifts to be distributed evenly among all people.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-java line-numbers&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; s &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; s &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; scoutsToSwitchOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; s&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;matchNum &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; scoutsOn&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOn &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; matchNum &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; scoutsToSwitchOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOn&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;                           
         &lt;span class=&quot;token comment&quot;&gt;//if they have been on more matches, or have been on the same amount&lt;/span&gt;
         &lt;span class=&quot;token comment&quot;&gt;//of matches but have taken more double shifts, add them to the sorted list&lt;/span&gt;
         &lt;span class=&quot;token comment&quot;&gt;//at this in front of the other scout&lt;/span&gt;
         &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;matchNum &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; scoutsOn&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOn &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; matchNum &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; scoutsToSwitchOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOn
                 &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;matchNum &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; scoutsOn&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOn &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; matchNum &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; scoutsToSwitchOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOn
                     &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; scoutsOn&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;extraShifts &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; scoutsToSwitchOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;extraShifts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
             indexToAdd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
             &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;                  
     &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;         
 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/271&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/271&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/283&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/283&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/31&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/31&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Scouting Data Summarizer]]></title><description><![CDATA[Repository https://github.com/ajayyy/LakeEffectScoutingSummary/ What is this This is a scouting app developed for FIRST Robotics Team 270…]]></description><link>https://blog.ajay.app/scouting-data-summarizer/</link><guid isPermaLink="false">https://blog.ajay.app/scouting-data-summarizer/</guid><pubDate>Wed, 27 Mar 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/LakeEffectScoutingSummary/&quot;&gt;https://github.com/ajayyy/LakeEffectScoutingSummary/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;What is this&lt;/h3&gt;
&lt;p&gt;This is a scouting app developed for FIRST Robotics Team 2708. It is used to scout other robots at the competition. The data is sent from 6 client apps to the server over bluetooth throughout the course of the events. The server must manage and put everything together. Scouting is nessesary to be able to change your team&apos;s strategy and know what teams to pick to join your alliance.&lt;/p&gt;
&lt;h3&gt;About this year&apos;s game&lt;/h3&gt;
&lt;p&gt;In this years game, teams must score &quot;cargo&quot; into holes in rockets. If the cargo is put in without a hatch panel, then it will fall out. The hatch panels must be fastened on to the rockets and cargo ship to prevent the cargo from falling out.
&lt;img src=&quot;https://files.steempeak.com/file/steempeak/ajayyy/Kfvwvueh-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Reader program for the raw scouting data&lt;/h1&gt;
&lt;p&gt;The data outputed by &lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&quot;&gt;the scouting app&lt;/a&gt; is very hard to quickly parse. Because of this, I have built a program to make a quick summary of the important detail.&lt;/p&gt;
&lt;p&gt;This program parses through the spreadsheet files and makes a nicer to view output. It also allows you to view a photo of the robot.&lt;/p&gt;
&lt;h1&gt;Technology Stack&lt;/h1&gt;
&lt;p&gt;This is build in HTML, CSS, and JavaScript using Electron.&lt;/p&gt;
&lt;h1&gt;Features&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/j0fqEaig-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;The program shows the average successes and misses of each action that can happen in the game along with the maximum they have completed in all of their matches.&lt;/p&gt;
&lt;p&gt;Find maximum:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-javascript line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getMaxItems&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//there might be multiple items that are the maximum&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; allMaxItems &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; items&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; allMaxItems&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; allMaxItems&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token comment&quot;&gt;//already exists, multiple maximum items&lt;/span&gt;
                allMaxItems&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token comment&quot;&gt;//set this as the maximum&lt;/span&gt;
                allMaxItems &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; allMaxItems&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The program does these summaries while still being able to work with a future data set. It does this by using the labels in each spreadsheet file as the labels it uses to display.&lt;/p&gt;
&lt;h1&gt;Sandstorm summary&lt;/h1&gt;
&lt;p&gt;In the sandstorm period, robots usually only do one thing. So, it is possible to condense 27 columns in a spreadsheet to just one line of text.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/3037V3zy-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This is a vast improvement in amount of time it takes to read.&lt;/p&gt;
&lt;h1&gt;Next Steps&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Improving the UI&lt;/li&gt;
&lt;li&gt;Adding nice charts&lt;/li&gt;
&lt;li&gt;Adding more data points to view, such as climbs and comments&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Competition Time]]></title><description><![CDATA[Repository https://github.com/LakeEffectRobotics/LakeEffectScoutingApp
https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp…]]></description><link>https://blog.ajay.app/competition-time/</link><guid isPermaLink="false">https://blog.ajay.app/competition-time/</guid><pubDate>Sat, 16 Mar 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;What is this&lt;/h3&gt;
&lt;p&gt;This is a scouting app developed for FIRST Robotics Team 2708. It is used to scout other robots at the competition. The data is sent from 6 client apps to the server over bluetooth throughout the course of the events. The server must manage and put everything together. Scouting is nessesary to be able to change your team&apos;s strategy and know what teams to pick to join your alliance.&lt;/p&gt;
&lt;h3&gt;About this year&apos;s game&lt;/h3&gt;
&lt;p&gt;In this years game, teams must score &quot;cargo&quot; into holes in rockets. If the cargo is put in without a hatch panel, then it will fall out. The hatch panels must be fastened on to the rockets and cargo ship to prevent the cargo from falling out.
&lt;img src=&quot;https://files.steempeak.com/file/steempeak/ajayyy/Kfvwvueh-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Verification&lt;/h1&gt;
&lt;p&gt;Before, the app would only tell a user they forgot something when there was a default option available that was not possible to be true. This would not let the user submit until they set it to a valid option.&lt;/p&gt;
&lt;p&gt;Now, the app also does verification. For example, robots are allowed to start with a game piece, either a cargo or a hatch. They are allowed to start with nothing though, it just does not happen that often. If the user selects that the robot started with nothing, the app now double checks the user meant what they wrote by showing a dialog box.&lt;/p&gt;
&lt;h1&gt;Fixed crash on tablets&lt;/h1&gt;
&lt;p&gt;The app was crashing on tablets due to the tablet layout not having variables named correctly. This has been fixed.&lt;/p&gt;
&lt;h1&gt;Editing scout name&lt;/h1&gt;
&lt;p&gt;The server now allows scout names to be edited in the user list. This makes it much easier to swap people out for new people, instead of adding a whole new user and deleting the old one.&lt;/p&gt;
&lt;h1&gt;Buttons to move a name up and down&lt;/h1&gt;
&lt;p&gt;The name order affects which shift each scout is on, the order is now easily changeable with an up and down button on each name.&lt;/p&gt;
&lt;h1&gt;Constant Bluetooth listening&lt;/h1&gt;
&lt;p&gt;This is a very important feature that probably should have been implemented far before now.&lt;/p&gt;
&lt;p&gt;Before the user gets to the scouting page, they are on a start page. Now, the bluetooth listeners (used to sync data) start up on this page as well, making it possible to pull data from this page instead of requiring users to open up the full scouting app.&lt;/p&gt;
&lt;p&gt;This will simplify the data pulling a lot.&lt;/p&gt;
&lt;h1&gt;Schedule viewer for the user&lt;/h1&gt;
&lt;p&gt;The user can now see their schedule in the start screen. This makes it much easier to plan around when they must be scouting versus not scouting.&lt;/p&gt;
&lt;p&gt;This works by getting the time off and time on of each user and showing when that happens. This makes the user know when they can leave and take a break from their work.&lt;/p&gt;
&lt;p&gt;This was accomplished by caching some of the data from the actual app, so that it can be ready to be sent. This is because some of the data (specifically the labels), are dynamically generated in the app by going through all the open views and finding what buttons, checkboxes, etc. are there.&lt;/p&gt;
&lt;p&gt;This is cached on the first app open for each version of the app. A check is put in place to make sure not to use a cache from a different version of the app.&lt;/p&gt;
&lt;h3&gt;Last update time&lt;/h3&gt;
&lt;p&gt;Above the schedule, it also shows the last update time to make sure the user knows if the schedule might be out of date (as they can&apos;t be synced constantly since it is synced over bluetooth only when the server device is nearby).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/rJc4obkc-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Questions&lt;/h1&gt;
&lt;p&gt;Many people were confused when the list of names was empty and just said &quot;choose one&quot;, so it now informs the user to ask the person running the server to send them a copy of the schedule and names list. This should make people less confused about the situation and ask less questions. This can be seen in the screenshot above.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/30&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/30&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/238&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/238&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/262&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/262&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Prevent Mistakes And More Data To Analyse | Android Development]]></title><description><![CDATA[Repository https://github.com/LakeEffectRobotics/LakeEffectScoutingApp
https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp…]]></description><link>https://blog.ajay.app/prevent-mistakes-and-more-data-to-analyse-or-android-development/</link><guid isPermaLink="false">https://blog.ajay.app/prevent-mistakes-and-more-data-to-analyse-or-android-development/</guid><pubDate>Sun, 24 Feb 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;What is this&lt;/h3&gt;
&lt;p&gt;This is a scouting app developed for FIRST Robotics Team 2708. It is used to scout other robots at the competition. The data is sent from 6 client apps to the server over bluetooth throughout the course of the events. The server must manage and put everything together. Scouting is nessesary to be able to change your team&apos;s strategy and know what teams to pick to join your alliance.&lt;/p&gt;
&lt;h3&gt;About this year&apos;s game&lt;/h3&gt;
&lt;p&gt;In this years game, teams must score &quot;cargo&quot; into holes in rockets. If the cargo is put in without a hatch panel, then it will fall out. The hatch panels must be fastened on to the rockets and cargo ship to prevent the cargo from falling out.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://files.steempeak.com/file/steempeak/ajayyy/Kfvwvueh-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Warning to move pages&lt;/h3&gt;
&lt;p&gt;In the last update, I made it so that there were two pages for scouting, one for the autonomous period, also called the sandstorm period this year, and one for the tele-op period. To prevent people from accidentally staying on the auto page the whole time and never switching, if it has been 15 seconds since the first tap on the page, then it will warn the user to switch pages.&lt;/p&gt;
&lt;p&gt;This should prevent many mistakes due to forgetfulness.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/xHsa0p97-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Close and far (visible and invisible)&lt;/h3&gt;
&lt;p&gt;In this game, drivers control the robots for the tele-op period. This means that they can do better or worse due to visibility. Now, the app exports data to tell how well the robot can score on the close side and the far side, to see if the robot has a proper automated vision system implemented.&lt;/p&gt;
&lt;p&gt;This will be very important at determining if we should alliance with certain teams.&lt;/p&gt;
&lt;h3&gt;Side cargo ship&lt;/h3&gt;
&lt;p&gt;Just like with the close and far rocket, the front and side cargo ship have different levels of visibility. Now, the app exports the difference.&lt;/p&gt;
&lt;h3&gt;Auto data encoding&lt;/h3&gt;
&lt;p&gt;Now that there is data for the normal check boxes, the autonomous period and the teleop period, as system had to be implemented if one of these areas had no data to send. This is done by sending a &quot;no data&quot; message to the server so that the server ignores this section in the query. Because of the new base 64 encoding, this &quot;no data&quot; message has to be encoded as well.&lt;/p&gt;
&lt;h3&gt;Success and Fail&lt;/h3&gt;
&lt;p&gt;The success and fail events were reversed in the code since they were showing the wrong one to the user. This made the database think that there was a success when it actually was a failure.&lt;/p&gt;
&lt;h3&gt;Automated scheduling improvements&lt;/h3&gt;
&lt;p&gt;The time-off setting now properly lets the person running the system to set the amount of time they want each person to have off on their break. This allows this system to work with more and more people, as the time off time can be increased to lower the amount of shifts required to be made.&lt;/p&gt;
&lt;p&gt;A shift system is used to give each person a break from scouting every little while, as 6 people must be scouting at a time at the competition.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/225&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/225&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/235&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/235&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/29&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/29&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[More Data and Better Quality Data | Android Development]]></title><description><![CDATA[Repository https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/
https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp…]]></description><link>https://blog.ajay.app/more-data-and-better-quality-data-or-android-development/</link><guid isPermaLink="false">https://blog.ajay.app/more-data-and-better-quality-data-or-android-development/</guid><pubDate>Tue, 19 Feb 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;What is this&lt;/h3&gt;
&lt;p&gt;This is a scouting app developed for FIRST Robotics Team 2708. It is used to scout other robots at the competition. The data is sent from 6 client apps to the server over bluetooth throughout the course of the events. The server must manage and put everything together&lt;/p&gt;
&lt;h3&gt;Created a page to record data for the &quot;Autonomous Period&quot;&lt;/h3&gt;
&lt;p&gt;Previously, data for this was just recorded with boxes, but this time I decided to make the app record data with the fancy visual page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/57ZR0uTJ-image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This allows us to know exactly what happened in the autonomous period. The user selectes the location the robot is, and what action just happened. This then allows us to make path charts of all the places the robot went thoughout the whole match, and allow us to know the success rate of the robot.&lt;/p&gt;
&lt;p&gt;This year&apos;s game has two game pieces, so the left deals with one game piece, the hatch, and the right deals with the second game piece, the cargo.&lt;/p&gt;
&lt;p&gt;This data is saved separately from the data from the tele-operated period. This is to help determine their strength at driving without humans watching.&lt;/p&gt;
&lt;h3&gt;Speed ups&lt;/h3&gt;
&lt;p&gt;After using this app at our competitions, we found some issues that were slowing down scouts from entering data, making the time the data was collected not as accurate (because the time events happen is recorded).&lt;/p&gt;
&lt;p&gt;I removed the confirmation dialog when the user triggers events, which was originally there to make sure the user doesn&apos;t press something by accident. This slowed down the user too much, and was not worth the trouble.&lt;/p&gt;
&lt;p&gt;Also, the match number now auto increments, making the user not have to specify what match they are scouting, it just knows.&lt;/p&gt;
&lt;p&gt;This will increase the quality of the data like crazy, as the user spends less time looking at the screen and more time watching the match.&lt;/p&gt;
&lt;h1&gt;Added some more decoding&lt;/h1&gt;
&lt;p&gt;In the last update, I made all the data encoded into base 64 to better keep the data in a format without special characters. This also added the benefit of making the app know if data is completely broken or not, since it will not decode properly.&lt;/p&gt;
&lt;p&gt;Now, more areas properly decode this encoded data.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/207&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/207&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/208&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/208&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/217&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/217&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/200&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/200&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/27&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/27&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/28&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/28&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Scheduling Visual and Base 64 encoding | Android Development]]></title><description><![CDATA[Repository https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp
https://github.com/LakeEffectRobotics/LakeEffectScoutingApp…]]></description><link>https://blog.ajay.app/scheduling-visual-and-base-64-encoding-or-android-development-1548387594935/</link><guid isPermaLink="false">https://blog.ajay.app/scheduling-visual-and-base-64-encoding-or-android-development-1548387594935/</guid><pubDate>Fri, 25 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;What is this&lt;/h3&gt;
&lt;p&gt;This is a scouting app developed for FIRST Robotics Team 2708. It is used to scout other robots at the competition. The data is sent from 6 client apps to the server over bluetooth throughout the course of the events. The server must manage and put everything together&lt;/p&gt;
&lt;h3&gt;Scheduling Visualizer&lt;/h3&gt;
&lt;p&gt;I made a visualizer to show the who is scouting which robot and when. This a feature I added a few months ago that assigned a schedule to when people are scouting to give people breaks and create a shift system. Only 6 people need to be scouting at a time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmZG1pDBhTMetMotqRJxtWr9VFNovtesZUDvTNu6sxKjKb&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Base 64 encoding&lt;/h3&gt;
&lt;p&gt;This is a very important update. The app now converts everything sent over bluetooth to base 64 before sending. This is done to compress the data a little and make everything use as little characters as possible. This prevents any code &quot;injection&quot; from the user which was happening accidentally before (users putting colons or quotation marks messing with the parsers).&lt;/p&gt;
&lt;p&gt;This also makes data loss a lot harder, as the base 64 decoder knows when data is invalid when it is missing part of the message.&lt;/p&gt;
&lt;p&gt;This was done using Java&apos;s built in function &lt;code class=&quot;language-text&quot;&gt;Base64.encode()&lt;/code&gt; which converts the &lt;code class=&quot;language-text&quot;&gt;String&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;byte[]&lt;/code&gt; to a &lt;code class=&quot;language-text&quot;&gt;byte[]&lt;/code&gt; with an encoded message. This then is sent over bluetooth and decoded on that side.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmdwbVhp2dzYMbMDoazqgdyzvKesVomefmmJm29p6QtdrP&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Fixed end splitter issues&lt;/h3&gt;
&lt;p&gt;There were issues where it was not checking for the end splitter in the received data. The end splitter is used in case the data gets cut off by bluetooth and sent in mutliple packets (which does happen often with large amounts of data being transferred). This should hopefully fix issues with large data transfers.&lt;/p&gt;
&lt;h3&gt;Support more scouters&lt;/h3&gt;
&lt;p&gt;The scheduling system now works with more than 12 people, that is 2 shifts. Before, when there were 2 shifts, it would sometimes shift people on for only one match, then shift them immediately off. This does not make any sense, so instead it now gives the extra person extra time off.&lt;/p&gt;
&lt;h4&gt;Commits&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/23&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/23&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/22&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/22&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/186&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/186&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/185&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/185&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/176&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/176&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[At Least It's Not Death | Platformer Game With A Twist | Java Game Development]]></title><description><![CDATA[Repository https://github.com/ajayyy/AtLeastItsNotDeath/ 
This is one of the visual effects thay might be applied, constantly changing…]]></description><link>https://blog.ajay.app/at-least-it-s-not-death-or-platformer-game-with-a-twist-or-java-game-development-1543867788768/</link><guid isPermaLink="false">https://blog.ajay.app/at-least-it-s-not-death-or-platformer-game-with-a-twist-or-java-game-development-1543867788768/</guid><pubDate>Mon, 03 Dec 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/AtLeastItsNotDeath/&quot;&gt;https://github.com/ajayyy/AtLeastItsNotDeath/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/1c6ed.gif&quot; alt=&quot;&quot;&gt;
This is one of the visual effects thay might be applied, constantly changing colours.&lt;/p&gt;
&lt;h1&gt;What is it?&lt;/h1&gt;
&lt;p&gt;At least it’s not death is a platformer game with some nice options when you die (so don’t just beat it first try ;)).&lt;/p&gt;
&lt;p&gt;When you die, you will be given two options. On one side, you get one power up in exchange for two sacrifices. You may choose which you would like by pressing A or D.&lt;/p&gt;
&lt;p&gt;Each death, you must make a sacrifice, which usually are some crazy visual effect on the screen.&lt;/p&gt;
&lt;h1&gt;Technology Stack&lt;/h1&gt;
&lt;p&gt;This is built with Java and an awesome open source library called Lib-GDX. This allows you to have full access to all OpenGL functions (through LWJGL) in Java. There are also some shaders used (for the colour changing visual effect and the lighting visual effect). These are written with GLSL. The &quot;Bloom&quot; post processing effect is created using &lt;a href=&quot;https://github.com/manuelbua/libgdx-contribs/&quot;&gt;a post processing plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Features&lt;/h1&gt;
&lt;h5&gt;Physics&lt;/h5&gt;
&lt;p&gt;The physics is programmed in mannually and is meant to be as modifiable as possible. This is done to ensure that the powerups and negative powers can easily change how the physics work to make it easier or harder.&lt;/p&gt;
&lt;h5&gt;Expandable Power Up System&lt;/h5&gt;
&lt;p&gt;The power up system is easily expandable by making a new &lt;code class=&quot;language-text&quot;&gt;switch&lt;/code&gt; statement in the power up class making even community submitted power ups simple to create.&lt;/p&gt;
&lt;h5&gt;Smoothed out animations&lt;/h5&gt;
&lt;p&gt;To make animations feel smooth, a lerp system is used. This makes the movement ease in.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-text line-numbers&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;float lerp = 2.5f;
float xMovement = ((x - game.main.cam.position.x) * lerp * game.deltaTime);&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This makes the movement much nicer to look at.&lt;/p&gt;
&lt;h5&gt;Random rotation&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;/images/1c731.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5&gt;Screenshake&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;/images/1c70f.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5&gt;Low lighting effect&lt;/h5&gt;
&lt;p&gt;It is made using shaders. It is based off vertexes (corners) of each object.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/1de25.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Download And Try It&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/AtLeastItsNotDeath/releases&quot;&gt;https://github.com/ajayyy/AtLeastItsNotDeath/releases&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Schedule Improvements and Fallbacks | Android Development]]></title><description><![CDATA[Repository https://github.com/LakeEffectRobotics/LakeEffectScoutingApp
https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp…]]></description><link>https://blog.ajay.app/schedule-improvements-and-fallbacks-or-android-development-1540864708646/</link><guid isPermaLink="false">https://blog.ajay.app/schedule-improvements-and-fallbacks-or-android-development-1540864708646/</guid><pubDate>Tue, 30 Oct 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;What is this&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;This is an app made for a FIRST robotics team.&lt;/p&gt;
&lt;p&gt;One of the most important strategic parts of the competition is scouting. Scouting is recording data about other robots to analyse and see what robots are good at what and bad at what.&lt;/p&gt;
&lt;p&gt;This is an app to do scouting. Recording data on paper and then putting it in a database is convoluted and wasteful, so we built an app to replace this system. 6 people use the app independently on Android devices and record data about one robot each per game. A server app can then pull data from all the devices to combine it all in one. This act of recording data is called scouting, and is done by someone called a scout. Each set of data is for one match of the game.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/images/image.png&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;/images/Screenshot_Lake_Effect_Scouting_App_20180914-162415.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3&gt;New Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Made it save the schedule in the shared preferences&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Made it so that you can override the schedule if nessesary&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Removed print statement&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Removed useless commented out code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Made it tell the user the next match off&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before, the user would not know when they were off until they typed in that number when they started scouting and were told that there was no robot to scout that match.&lt;/p&gt;
&lt;p&gt;Now, it shows how many matches left until that person is off at the top of the screen at all times. This is calculated by going through the schedule and seeing when there are no robots to scout.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-java line-numbers&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; matchBack &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;//find next match number&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; matchNumber &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; schedules&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userID&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;robots&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	 &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;schedules&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userID&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;robots&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			 matchBack &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
			 &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; matchBack&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Renamed &quot;round&quot; to matchNumber&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updates main activity whe a new schedule is sent&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allows you to use no scout name if overriding schedule&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed crash when trying to change time until back on.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Also, fixed functions checking how much longer until the scout is back on, or back off.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Match number properly updates when typed in&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added back UUID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Changed end splitter from &quot;END&quot; to &quot;{e}&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also set the end splitter to be a variable to easily change&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before the end splitter was just END, however this is not best. If the data actually contains the word &quot;END&quot; in it, the system could break and end abrubdtly. Now the end splitter is something that is escaped from the data and is easily changed.&lt;/p&gt;
&lt;p&gt;The end splitter is a string put on the end of the data so that the server can make sure it recieved all the info.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Removed deprecated gradle methods&lt;/li&gt;
&lt;li&gt;Made it so that once you override the schedule, the schedule is overriden until an app restart.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overriding schedule is nessesary when testing the app and if the schedule breaks. Before, if you overrided the schedule once, you would have to do it again when scouting another match. Now, the schedule will stay overridden until the app is restarted.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prevented updating robot number if schedule is overridden.&lt;/li&gt;
&lt;li&gt;Added way to make a customisable scout name after overriding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before, the scout name (the name of the person watching and recording data for this match) was just set to &quot;No scout&quot; if the schedule was overridden, now there is a way to set that.&lt;/p&gt;
&lt;h3&gt;Server&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added reset names button
&lt;ul&gt;
&lt;li&gt;Removes all users added at once with one button press.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Switched to better contains method&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before it was using &lt;code class=&quot;language-text&quot;&gt;string.contains()&lt;/code&gt; which is just incorrect and only works if the classes are the same. (If you use new String(), it will not work even with the same string contents).&lt;/p&gt;
&lt;p&gt;Instead, you must use a for loop and check if &lt;code class=&quot;language-text&quot;&gt;string.equals()&lt;/code&gt; as this checked the actual contents of the strings instead of the instance IDs.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/19&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/19&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/20&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/20&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/142&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/142&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/143&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/143&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/155&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/155&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/157&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/157&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Bluetooth Syncing Schedule | Android Developement]]></title><description><![CDATA[Repository https://github.com/LakeEffectRobotics/LakeEffectScoutingApp
https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp…]]></description><link>https://blog.ajay.app/bluetooth-syncing-schedule-or-android-developement-1539735660793/</link><guid isPermaLink="false">https://blog.ajay.app/bluetooth-syncing-schedule-or-android-developement-1539735660793/</guid><pubDate>Wed, 17 Oct 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Server&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/image.png&quot; alt=&quot;&quot;&gt;
(Lists all devices and the last time they were pulled at)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added ability to undo recent actions
&lt;ul&gt;
&lt;li&gt;Merged allNames and scoutNames, and made them use Scout lists instead of String lists.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To do this, an actions class was created. The actions class stores what action happened, and to what object. This data is then used to do the opposite and undo the action.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added cap of 25 to past actions&lt;/li&gt;
&lt;li&gt;Changed size of text views to be based off of ems instead of width&lt;/li&gt;
&lt;li&gt;Fixed &quot;You must select at least 6 scouts&quot; not being triggered when it should be because of selectedNames rename&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To make sure a scout is &quot;active&quot; during that match, it sees if they are off at that match or not.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now sends schedule to client before pulling&lt;/li&gt;
&lt;li&gt;Converts schedule to string and sends it to client&lt;/li&gt;
&lt;li&gt;Sends name instead of id&lt;/li&gt;
&lt;li&gt;Fixed schedule loading
&lt;ul&gt;
&lt;li&gt;Was loading the same number every time by loading at [i] instead of [s]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Adds end characters to the end of all data&lt;/li&gt;
&lt;li&gt;Makes sure full data was sent&lt;/li&gt;
&lt;li&gt;Cuts out END from labels as well&lt;/li&gt;
&lt;li&gt;Fix it skipping the first line&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Client&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Made it load schedule based on data recieved&lt;/li&gt;
&lt;li&gt;Uses name sent from server in the schedule&lt;/li&gt;
&lt;li&gt;Refractor and code cleanup&lt;/li&gt;
&lt;li&gt;removed unused commented out code&lt;/li&gt;
&lt;li&gt;Combines split packets&lt;/li&gt;
&lt;li&gt;Sends END at the end of data&lt;/li&gt;
&lt;li&gt;Sends recieved once the message is sent&lt;/li&gt;
&lt;li&gt;Fix END not being added to data. Fixed split packets not combining properly&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;data&lt;/code&gt; is a variable that is accumulative of all this data. This is because bluetooth often cuts packets short. To solve this, the application waits until it reaches an end character, and adds up all the data up to that point.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;message = data + currentSentData
data += message&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;changed to:
&lt;code class=&quot;language-text&quot;&gt;data = message&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made the userID change when you changed the spinner&lt;/li&gt;
&lt;li&gt;Made userIDSpinner update when a new schedule is sent.
&lt;ul&gt;
&lt;li&gt;Also saves the position.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Notifies when the scout is off that match.
&lt;ul&gt;
&lt;li&gt;Tells them what match to come back at&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Previous toast is closed if a new toast error needs to be - shown&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is very useful, otherwise Android will lag and show old Toasts until all of them are completely done being shown.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Removed default schedule&lt;/li&gt;
&lt;li&gt;Disabled &quot;this robot is not at this event&quot; popup as it has been deprecated&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This has not been replaced by the new scheduling system.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/141&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/141&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/18&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/18&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Scheduling Creation | Android Development]]></title><description><![CDATA[Repository https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp What is this This is an app made for a FIRST robotics team. One…]]></description><link>https://blog.ajay.app/scheduling-creation-or-android-development-1538942995465/</link><guid isPermaLink="false">https://blog.ajay.app/scheduling-creation-or-android-development-1538942995465/</guid><pubDate>Sun, 07 Oct 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;What is this&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;This is an app made for a FIRST robotics team.&lt;/p&gt;
&lt;p&gt;One of the most important strategic parts of the competition is scouting. Scouting is recording data about other robots to analyse and see what robots are good at what and bad at what.&lt;/p&gt;
&lt;p&gt;This is an app to do scouting. Recording data on paper and then putting it in a database is convoluted and wasteful, so we built an app to replace this system. 6 people use the app independently on Android &gt; devices and record data about one robot each per game. A server app can then pull data from all the devices to combine it all in one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;New Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Save device name in shared preferences&lt;/li&gt;
&lt;li&gt;Fixed issue with names not deselecting
&lt;ul&gt;
&lt;li&gt;If they are removed from the list while selected and were added in a previous runtime&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When a name was removed while selected, it was removed from the allNames list but not the
selectedNames list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made a calculatable schedule for each user&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For scouting, there are 6 robots per match that need to be watched. This function needs to figure out who to switch on and off when, and which robot each person is watching (scouting). This does this by simulating someone swapping names every match like you would do on paper.&lt;/p&gt;
&lt;p&gt;It creates a list of the on and off scouts&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-java line-numbers&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//scouts currently scouting or not&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;Scout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; scoutsOn &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Scout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Scout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; scoutsOff &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It then finds who needs to swap with who if there is someone to swap with.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-java line-numbers&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//calculate the schedule for this match&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//find scouts to switch on (the scouts that have been off &gt;= targetTimeOff)&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Scout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; scoutsToSwitchOn &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; scoutsOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	 &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;matchNum &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; scoutsOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOff &lt;span class=&quot;token operator&quot;&gt;&gt;=&lt;/span&gt; targetTimeOff &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; scoutsToSwitchOn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			 scoutsToSwitchOn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;scoutsOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;//find scouts to switch off (scouts with the highest time)&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Scout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; scoutsToSwitchOff &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//sort by time on&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; scoutsOn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	 &lt;span class=&quot;token comment&quot;&gt;//the index to add this scout when sorted&lt;/span&gt;
	 &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; indexToAdd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; scoutsToSwitchOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	 &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; s &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; s &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; scoutsToSwitchOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; s&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			 &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;matchNum &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; scoutsOn&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOn &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; matchNum &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; scoutsToSwitchOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOn&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					 indexToAdd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
					 &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
			 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	 &lt;span class=&quot;token comment&quot;&gt;//add at index&lt;/span&gt;
	 scoutsToSwitchOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;indexToAdd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; scoutsOn&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second for loop sorts the scouts on by how long they have been on. This is then used to switch the people ready to switch back on with the people who have been working the longest.&lt;/p&gt;
&lt;p&gt;Using that information, it swaps the scouts.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-java line-numbers&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//swap scouts on with scouts off&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; scoutsToSwitchOn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	 &lt;span class=&quot;token comment&quot;&gt;//scout switching on and off&lt;/span&gt;
	 &lt;span class=&quot;token class-name&quot;&gt;Scout&lt;/span&gt; switchingOn &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; scoutsToSwitchOn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	 &lt;span class=&quot;token class-name&quot;&gt;Scout&lt;/span&gt; switchingOff &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; scoutsToSwitchOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

	 scoutsOn&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getScout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;switchingOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; scoutsOn&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; switchingOn&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

	 scoutsOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;switchingOn&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	 scoutsOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;switchingOff&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

	 &lt;span class=&quot;token comment&quot;&gt;//update timeOff and timeOn&lt;/span&gt;
	 switchingOn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOn &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; matchNum&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	 switchingOff&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeOff &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; matchNum&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is then repeated for all the matches&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added scroll view to name selector&lt;/li&gt;
&lt;li&gt;Prevented crash when less than 6 scouts were selected&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is not possible to make a schedule with less than 6 scouts, a warning must be given to the user.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Removed button to set minimum version number&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I made the minimum version number auto update when someone types.
This is used to make sure the bluetooth clients this app connects to are up to date to not break the system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added ability to change target time off in the app&lt;/li&gt;
&lt;li&gt;Now can add a scout starting at a match number without disrupting the currently running schedule.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Fixed checkboxes getting reversed&lt;/li&gt;
&lt;li&gt;Made it save and load the match number the selected names were selected at&lt;/li&gt;
&lt;li&gt;Added support for scouts that join and leave the selected list multiple times throughout the day&lt;/li&gt;
&lt;li&gt;Made it so that you can disable and enable scouts continuously over the course of the day
&lt;ul&gt;
&lt;li&gt;It saves the match numbers the scout starts and stops&lt;/li&gt;
&lt;li&gt;It will tell you if you disable a scout when no one can replace them&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a very important feature. If someone needs to leave and do something else, you can type what match they are leaving or starting at to make that user only matter during certain matches.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/image.png&quot; alt=&quot;&quot;&gt;
(The names in the image above are customisable, I put them as numbers for testing purposes)&lt;/p&gt;
&lt;p&gt;To do this, a history of every time a user was selected and deselected is required to be kept.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;saves history of disabling and enabling scouts in shared preferences&lt;/li&gt;
&lt;li&gt;Fixed issue where scout sometimes wasn&apos;t taken off&lt;/li&gt;
&lt;li&gt;Fixed parts of scheduling clearing eachother&lt;/li&gt;
&lt;li&gt;Make the switching on and off inclusive
&lt;ul&gt;
&lt;li&gt;If you switch on at match 25, you will be on at match 25.&lt;/li&gt;
&lt;li&gt;If you switch off at match 30, you will be off at match 30.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Made checkboxes set to their last checked position&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This was required to make sure that when you returned, it looks exactly like when you closed the app. Before, if the scout was EVER checked off, it would start checked next time you opened the app.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Made time off be changed based on match number&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can change the time off starting at match 5 for example, and after that point scouts will get 3 matches off instead of 2.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Renamed mislabeled variables (Changed TextView to EditText)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Pull Request&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/17&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/17&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Scheduling System | Android Development]]></title><description><![CDATA[Repository https://github.com/LakeEffectRobotics/LakeEffectScoutingApp
https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp…]]></description><link>https://blog.ajay.app/scheduling-system-or-android-development-1536956863425/</link><guid isPermaLink="false">https://blog.ajay.app/scheduling-system-or-android-development-1536956863425/</guid><pubDate>Fri, 14 Sep 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;What is this&lt;/h1&gt;
&lt;p&gt;This is an app made for a FIRST robotics team.&lt;/p&gt;
&lt;p&gt;One of the most important strategic parts of the competition is scouting. Scouting is recording data about other robots to analyse and see what robots are good at what and bad at what.&lt;/p&gt;
&lt;p&gt;This is an app to do scouting. Recording data on paper and then putting it in a database is convoluted and wasteful, so we built an app to replace this system. 6 people use the app independently on Android devices and record data about one robot each per game. A server app can then pull data from all the devices to combine it all in one.&lt;/p&gt;
&lt;h1&gt;Technology Stack&lt;/h1&gt;
&lt;p&gt;The apps are built with Java and use bluetooth to communicate. The layouts are made in XML.&lt;/p&gt;
&lt;h1&gt;What have I implemented&lt;/h1&gt;
&lt;p&gt;Now that all of the nessesary features of the app are implemented, I am implementing a system to organise and schedule when people should switch on and off scouting to prevent chaos and prevent someone needing to do it manually.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/Screenshot_Lake_Effect_Scouting_App_20180914-162415.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Server&lt;/h1&gt;
&lt;p&gt;On the server, I have created a UI for adding a bunch of active devices to a list to be able to pull them all in one button pressed.&lt;/p&gt;
&lt;p&gt;I implemented a user UI to add and remove a list of users.&lt;/p&gt;
&lt;p&gt;This list of users will be used to send to the client devices so they know what users are scheduled to scout when.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/Screenshot_ScoutingServerApp_20180908-230102.png&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;/images/Screenshot_ScoutingServerApp_20180914-162347.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Client&lt;/h1&gt;
&lt;p&gt;On the client, you now just have to select a match number, the robot number and team (alliance) it is on is dicided based on the schedule.&lt;/p&gt;
&lt;h1&gt;Future&lt;/h1&gt;
&lt;p&gt;The schedule will be decided by the server, and sent over to the client. The client will know when to switch off instead of scouting as well, instead of just knowing a schedule of what robot number to scout (watch) per match number.&lt;/p&gt;
&lt;h4&gt;Pull Requests&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/132&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingApp/pull/132&lt;/a&gt;
&lt;a href=&quot;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/16&quot;&gt;https://github.com/LakeEffectRobotics/LakeEffectScoutingServerApp/pull/16&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Smooth Window Movement And Manipulation | Voster Coaster | VR Roller Coaster Building And Tycoon Game]]></title><description><![CDATA[Repository https://github.com/ajayyy/VosterCoaster/ Smooth Window Movement https://www.youtube.com/watch?v=T4B0SE3am_k Before, the window…]]></description><link>https://blog.ajay.app/smooth-window-movement-and-manipulation-or-voster-coaster-or-vr-roller-coaster-building-and-tycoon-game-1535759087937/</link><guid isPermaLink="false">https://blog.ajay.app/smooth-window-movement-and-manipulation-or-voster-coaster-or-vr-roller-coaster-building-and-tycoon-game-1535759087937/</guid><pubDate>Fri, 31 Aug 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoaster/&quot;&gt;https://github.com/ajayyy/VosterCoaster/&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Smooth Window Movement&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=T4B0SE3am_k&quot;&gt;https://www.youtube.com/watch?v=T4B0SE3am_k&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before, the window would just teleport to the new location necessary. Now it slowly moves over using Slerp  (spherical interpolation). It feels a lot better when dragging around the windows as they feel more realistic. Objects in real life do not teleport.&lt;/p&gt;
&lt;h1&gt;Window Resizing&lt;/h1&gt;
&lt;p&gt;Another important feature of windowing system is resizing. I decided to use a pinch to zoom system to make this window resizing. By pointing at the window and pinching your controllers together, you make it smaller. When you move your controllers away from eachother, they grow (as shown in the video).&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;resizingCurrentHitLeft = gameController.leftWindowHit;
resizingCurrentHitRight = gameController.rightWindowHit;

Vector3 leftPosition = resizingCurrentHitLeft.point;
Vector3 rightPosition = resizingCurrentHitRight.point;

if (!gameController.leftWindowBHit) {
    leftPosition = gameController.leftControllerObject.transform.position + gameController.leftControllerObject.transform.forward * leftDistance;
} else {
    leftDistance = gameController.leftWindowDistanceAway;
}

if (!gameController.rightWindowBHit) {
    rightPosition = gameController.rightControllerObject.transform.position + gameController.rightControllerObject.transform.forward * rightDistance;
} else {
    rightDistance = gameController.rightWindowDistanceAway;
}

Vector3 newSize = (Vector3.Distance(leftPosition, rightPosition) / Vector3.Distance(resizingStartHitLeft.point, resizingStartHitRight.point)) * resizingStartSize;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The program takes the points that the raycast from the controller hit the window. These points are then compared to the points that were originally hit when the resizing process was started (the trigger button was pressed with both controllers pointing at the window)&lt;/p&gt;
&lt;h1&gt;Smooth Resizing&lt;/h1&gt;
&lt;p&gt;Very similar to how the smooth movement works, resizing cannot be just teleporting to a new size. Using Slerp and a start and target size, these sizes can be interpolated.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//change size based on current animation
if (animatingResize) {
    transform.position = Vector3.Slerp(animatingStartPosition, animatingTargetPosition, (Time.time - animatingStartTime) * 20f);

    transform.localScale = Vector3.Slerp(animatingStartSize, animatingTargetSize, (Time.time - animatingStartTime) * 20f);

    transform.rotation = Quaternion.Slerp(animatingStartRotation, animatingTargetRotation, (Time.time - animatingStartTime) * 20f);

    if ((Time.time - animatingStartTime) * 20f &amp;gt;= 1) {
        animatingResize = false;
    }
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Movement While Resizing&lt;/h1&gt;
&lt;p&gt;In real life, if you grab a paper and are dragging your fingers along it, you expect moving your hand to move the entire Window. To make this seem more realistic, I made the position of the window while it was being resized be the average position between the two points (or a 0.5 interpolation).&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;animatingTargetPosition = Vector3.Lerp(leftPosition, rightPosition, 0.5f);&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Track Offset Issues&lt;/h1&gt;
&lt;h6&gt;Partial Track Pieces Between Segements&lt;/h6&gt;
&lt;p&gt;One track segment is made up of many track pieces. The last piece on the track segment might not need to be full filled, so it ends up being a partial track piece. When a new track segment is created after, the rest of the partial track piece is used in the next track segment.&lt;/p&gt;
&lt;p&gt;Before, the amount being used for that was being subtracted from the amount of curve tracks that were needed to be generated for the next segment, but that ended up not being correct. The correct way is to subtract it from the amount of tracks needed to be generated going from the end of the curve to the target.&lt;/p&gt;
&lt;h6&gt;Horizontal Offset&lt;/h6&gt;
&lt;p&gt;Each track piece is split up into 10 &quot;bones&quot;. This is to make the track piece look curved. When a partial track piece is created, it might need to use only part of a bone.&lt;/p&gt;
&lt;p&gt;Before, that bone&apos;s size was then shrunk accordingly, same with the angle it was at.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;rails[i][r].transform.localPosition = ((percentageOfTrack - ((r - 1) / rollerCoaster.boneAmount)) * rollerCoaster.boneAmount) * defaultBonePosition;
rails[i][r].transform.localEulerAngles = ((percentageOfTrack - ((r - 1) / rollerCoaster.boneAmount)) * rollerCoaster.boneAmount) * currentAngle;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That turned out not to be accurate enough. Instead, that track piece has to just not exist, rounding down to the nearest bone.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;rails[i][r].transform.localPosition = Vector3.zero;
rails[i][r].transform.localEulerAngles = Vector3.zero;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Pull Request&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoaster/pull/18&quot;&gt;https://github.com/ajayyy/VosterCoaster/pull/18&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[UI Elements and Building Improvements | Voster Coaster | VR Roller Coaster Building and Tycoon Game | Development Update]]></title><description><![CDATA[(Sorry, my computer cannot handle recording while running in VR well) radial menu 2.gif Repository https://github.com/ajayyy/CunctansSquare…]]></description><link>https://blog.ajay.app/ui-elements-and-building-improvements-or-voster-coaster-or-vr-roller-coaster-building-and-tycoon-game-or-development-update-1534825023124/</link><guid isPermaLink="false">https://blog.ajay.app/ui-elements-and-building-improvements-or-voster-coaster-or-vr-roller-coaster-building-and-tycoon-game-or-development-update-1534825023124/</guid><pubDate>Tue, 21 Aug 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;(Sorry, my computer cannot handle recording while running in VR well)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/radial%20menu%202.gif&quot; alt=&quot;radial menu 2.gif&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/CunctansSquare&quot;&gt;https://github.com/ajayyy/CunctansSquare&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Radial UI&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/radial%20menu%204.gif&quot; alt=&quot;radial menu 4.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;I created a radial menu,&lt;/p&gt;
&lt;p&gt;To select objects, you put your finger on the trackpad and slide around. Depending on how close you are to an option, the option will expand.&lt;/p&gt;
&lt;p&gt;I also made it so that the menus can be easily generated for future use.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoaster/pull/17/files#diff-697c75de88b9a4154bf85fa30d1a0d19&quot;&gt;https://github.com/ajayyy/VosterCoaster/pull/17/files#diff-697c75de88b9a4154bf85fa30d1a0d19&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/VosterCoaster/pull/17/files#diff-bbd14ff151f2f7f75a517bf65cfe5df1&quot;&gt;https://github.com/ajayyy/VosterCoaster/pull/17/files#diff-bbd14ff151f2f7f75a517bf65cfe5df1&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Floating Windows&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/floating%20window.PNG&quot; alt=&quot;floating window.PNG&quot;&gt;&lt;/p&gt;
&lt;p&gt;I wasn&apos;t able to get a recording of the floating windows, the recording was 1 frame per second.&lt;/p&gt;
&lt;p&gt;There needs to be some way to change a large amount of options. To make this possible, I made floating windows. When you drag on a part of the window that is not a button, then the window will move, otherwise the button will be pressed.&lt;/p&gt;
&lt;p&gt;I also added separate images for hovering a button.&lt;/p&gt;
&lt;p&gt;Main files:
&lt;a href=&quot;https://github.com/ajayyy/VosterCoaster/pull/17/files#diff-a23ba8873925244e5a1301ad6d9cf68d&quot;&gt;https://github.com/ajayyy/VosterCoaster/pull/17/files#diff-a23ba8873925244e5a1301ad6d9cf68d&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/VosterCoaster/pull/17/files#diff-ed5979ecb002b25add9254d85a4ca478&quot;&gt;https://github.com/ajayyy/VosterCoaster/pull/17/files#diff-ed5979ecb002b25add9254d85a4ca478&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Track Building Improvements&lt;/h1&gt;
&lt;p&gt;The track was being offset compared to the actual controller position. This was very bad because it made it so that completing a roller coaster automatically does not work perfectly. This was able to be fixed by offsetting the controller&apos;s position.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;Vector3 targetPositonOffset = new Vector3(0, 0, trackWidth / 2);
             
targetPosition += targetPositonOffset;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Fixed Physics Issues&lt;/h1&gt;
&lt;p&gt;There was an issue where an uphill track was thought to be a downhill track if it was in the opposite direction.&lt;/p&gt;
&lt;p&gt;This was caused by the incline using the y axis rotation when that was not necessary.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//necessary to get accurate inclines from inclines after turns
inclineAngleOfTrack -= eulerAnglesOfTrack.y;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Pull Request&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoaster/pull/17&quot;&gt;https://github.com/ajayyy/VosterCoaster/pull/17&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Cunctan's Square | Turn Based Puzzle Game]]></title><description><![CDATA[ld41_final_quality.gif Repository https://github.com/ajayyy/CunctansSquare What is this? Cunctan's Square is a turn based puzzle game where…]]></description><link>https://blog.ajay.app/cunctans-square--turn-based-puzzle-game/</link><guid isPermaLink="false">https://blog.ajay.app/cunctans-square--turn-based-puzzle-game/</guid><pubDate>Tue, 14 Aug 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/QmSB5GiFdy44a9aHHkBMgBmJkmndYTFywdq8pQx8ezYBDu&quot; alt=&quot;ld41_final_quality.gif&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Repository&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/CunctansSquare&quot;&gt;https://github.com/ajayyy/CunctansSquare&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;What is this?&lt;/h1&gt;
&lt;p&gt;Cunctan&apos;s Square is a turn based puzzle game where you must move your player to the end without being hit by the enemies.&lt;/p&gt;
&lt;p&gt;However, the world closes in on itself each time you move. This gives you less space to move and eliminates certain paths to the exit.&lt;/p&gt;
&lt;h1&gt;Technology Stack&lt;/h1&gt;
&lt;p&gt;This game is written in Java with Lib-GDX. Lib-GDX is a an open source library that uses LWJGL and allows you to make a game in Java that supports Windows, Mac, Linux, HTML5, Android, and even iOS. The post processing effects are created using &lt;a href=&quot;https://github.com/manuelbua/libgdx-contribs/&quot;&gt;libgdx-contribs&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Features&lt;/h1&gt;
&lt;h5&gt;Path generation&lt;/h5&gt;
&lt;p&gt;Each turn the player takes, one block is removed from the field. If this block was completely random, then the player would just get blocked from being able to access the finish.&lt;/p&gt;
&lt;p&gt;To solve this, the program calculates a path from the player&apos;s current position, and makes sure to exclude those from the tiles that get destroyed.&lt;/p&gt;
&lt;h5&gt;Edges&lt;/h5&gt;
&lt;p&gt;Having pieces disappear from the middle of the area felt really weird, and did not have the same sense of claustrophobia as destroying blocks from the outside in.&lt;/p&gt;
&lt;p&gt;To solve this, only edge blocks are destroyed.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-java line-numbers&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findEdgeBlocks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; blocks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; edgeBlocks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt; block &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;blocks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; surroundingBlocks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		
		surroundingBlocks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBlock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;block&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		surroundingBlocks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBlock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;block&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		surroundingBlocks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBlock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;block&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;y &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		surroundingBlocks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBlock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;block&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;y &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; edgeBlock &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;token comment&quot;&gt;//if true, this cannot be an edge piece&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; noNull &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt; surroundingBlock &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; surroundingBlocks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;surroundingBlock &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
				noNull &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;noNull&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; otherBlocks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;blocks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
			otherBlocks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;block&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
			
			&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Block&lt;/span&gt; surroundingBlock &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; surroundingBlocks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;surroundingBlock &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Vector2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; allPaths&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;surroundingBlock&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
					
					&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;vectorListContainsAny&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lastDestroyedBlocks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;allPaths&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;containsKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;surroundingBlock&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
						path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;surroundingBlock&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; surroundingBlock&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; levelConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;endX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; levelConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;endY&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; otherBlocks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
						allPaths&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;surroundingBlock&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
					
					&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
						edgeBlock &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
						&lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
			
			&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;edgeBlock&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
				edgeBlocks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;block&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; edgeBlocks&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A block is considered an edge block if, when removed, it does not block the path of the surrounding blocks to the target. Also, if there all the surrounding blocks are actual blocks, it cannot be an edge piece, no matter what.&lt;/p&gt;
&lt;h3&gt;Optimizations&lt;/h3&gt;
&lt;h5&gt;Threading&lt;/h5&gt;
&lt;p&gt;These calculations are very costly and can make a turn take up to 5 seconds to complete. To solve this, the calculations are done before hand in a separate thread to prepare for when the user is ready to move.&lt;/p&gt;
&lt;h5&gt;HTML5&lt;/h5&gt;
&lt;p&gt;Javascript does not support threading, so other solutions have to be used to fix the load times as well&lt;/p&gt;
&lt;h5&gt;Do not repeat calculations&lt;/h5&gt;
&lt;p&gt;To prevent repeating calculations, you can check if the path included one of the previously destroyed blocks, because otherwise nothing has changed,&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-java line-numbers&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;vectorListContainsAny&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lastDestroyedBlocks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;token comment&quot;&gt;//redo calculations&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Commits&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/CunctansSquare/commits/master&quot;&gt;https://github.com/ajayyy/CunctansSquare/commits/master&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/CunctansSquare/commits/html5-no-threading&quot;&gt;https://github.com/ajayyy/CunctansSquare/commits/html5-no-threading&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;GitHub Account&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Watching Your Roller Coasters | Voster Coaster | VR Roller Coaster Builder Tycoon Game]]></title><description><![CDATA[track preview.gif Repository https://github.com/ajayyy/VosterCoasterVR Watching your roller coasters After finishing the ability to build…]]></description><link>https://blog.ajay.app/watching-your-roller-coasters-or-voster-coaster-or-vr-roller-coaster-builder-tycoon-game/</link><guid isPermaLink="false">https://blog.ajay.app/watching-your-roller-coasters-or-voster-coaster-or-vr-roller-coaster-builder-tycoon-game/</guid><pubDate>Mon, 30 Jul 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/QmeBMht5zypqDnSw7V2bQZMLLjNcr9rhK7KD3jPHAN6Hct&quot; alt=&quot;track preview.gif&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Repository&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR&quot;&gt;https://github.com/ajayyy/VosterCoasterVR&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Watching your roller coasters&lt;/h1&gt;
&lt;p&gt;After finishing the ability to build roller coasters, I set out to allow the roller coasters to be run. I wanted this to be as realistic as possible so that I can later use the data to gather g-forces to know the intensity of roller coasters that are created.&lt;/p&gt;
&lt;h1&gt;Physical approach&lt;/h1&gt;
&lt;p&gt;When I first was thinking of ways to create a preview of your roller coaster, I thought of using the default physics engine. I would create meshes on each track and try to slide a box across the whole thing.&lt;/p&gt;
&lt;p&gt;This started looking like it was going to work perfectly, but sadly it did not because of a small issue in the physics engine. Whenever it got to a crease between the one track pieces collision mesh and another&apos;s, there was a chance it would suddenly jump upward.&lt;/p&gt;
&lt;p&gt;This drove me nuts trying to find what was causing this problem. I tried many things to try to fix this.&lt;/p&gt;
&lt;h3&gt;Smooth out the meshes&lt;/h3&gt;
&lt;p&gt;Because of how curves work, the size of the collider might have to be slightly different for each track piece. At first, I thought this was the issue, but fixing sizes did nothing.&lt;/p&gt;
&lt;h3&gt;Wheels&lt;/h3&gt;
&lt;p&gt;In real life, wheels do not slide across a surface, they roll.&lt;/p&gt;
&lt;p&gt;I then attempted to create a rolling ball down the tracks.&lt;/p&gt;
&lt;p&gt;Sadly, the same jumping issue remained.&lt;/p&gt;
&lt;h3&gt;Even more realism&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmS1uK893oUJvqeTfm8pBTHo4U5JVzzBsGb7DeSp32uiAf&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;I tried recreating a real roller coaster&apos;s wheel system by having wheels above and below the track.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmcmD8ZRqs6MXhi4KFjYaPo885F3WWDFs3RNoy6XtJNP9x&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This still had the same issues and it was boggling my mind.&lt;/p&gt;
&lt;h3&gt;Multiple meshes&lt;/h3&gt;
&lt;p&gt;After more research, I discovered that the issue probably stems from the fact that multiple colliders are being used. Combining the colliders will surely help!&lt;/p&gt;
&lt;p&gt;To do this, I created many planes where the colliders before used to be and merged them into one.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//Create cubes and offset them based on each bone&amp;#39;s position
for (int b = 0; b &amp;lt; bones.Count; b++) {
    float size;

    if (b + 1 &amp;gt;= bones.Count || (b + 1) % rollerCoaster.boneAmount == 0) {
        //if there is no next position, use the last position instead
        size = lastSize;
    } else {
        Vector3 nextPosition = bones[b + 1].position;
        size = Vector3.Distance(bones[b].position, nextPosition) / GameController.instance.scale;
    }

    cubes[b] = CreatePlane(offset + bones[b].position / GameController.instance.scale, new Vector3(1, 1, size), bones[b].rotation);

    lastSize = size;
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This still was having jumping issues, which made no sense.&lt;/p&gt;
&lt;h3&gt;Simplifying mesh&lt;/h3&gt;
&lt;p&gt;I concluded that this must be because each track is still being treated as a seperate mesh, even though it is all combined into one. I tried using resources to simplify the mesh with no luck.&lt;/p&gt;
&lt;p&gt;After all this, I learned that this physics engine is not practical to make a realistic roller coaster simulation with.&lt;/p&gt;
&lt;h1&gt;Custom Approach&lt;/h1&gt;
&lt;p&gt;Time and time again, I learn how much making a custom system works better than trying to use many other systems together to do something it was never designed for.&lt;/p&gt;
&lt;p&gt;I also learned how making custom physics will help me so much in the future when I will need to calculate the g-forces of the roller coasters to determine intensity and other statistics.&lt;/p&gt;
&lt;p&gt;To do this, I thought of the track as a straight line, and made the position variable just be specifying the position on that straight line.&lt;/p&gt;
&lt;p&gt;Each frame, the velocity must be added to the position (divided by the physics frame rate)&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;position += velocity / 60f;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And each frame, the acceleration must be added to the velocity. But how is the acceleration calculated? This is calculated based on gravity on an inclined plane.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//calculate the force downward (divided by 60 fps)
float forceDown = (-9.81f) / 60f;

//calculate the amount of that force used on an incline of the angle (same as acceleration)
float gravityAcceleration = Mathf.Sin(inclineAngleOfTrack * Mathf.Deg2Rad) * forceDown;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmccqpLXSurc931HpFTdm5BwKRbHPQPxWyy3H5BRzzqf1J&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;The blue arrow is the downward force and the red arrow is what we are trying to find. The green arrow would be found if you use cosine instead.&lt;/p&gt;
&lt;p&gt;After finding the acceleration, it can be added it to the velocity.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//calculate the new movements
velocity += gravityAcceleration;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Friction can also be added.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;if (velocity &amp;gt; 0) {
    velocity -= friction;
    if (velocity &amp;lt; 0) {
        velocity = 0;
    }
} else {
    velocity += friction;
    if (velocity &amp;gt; 0) {
        velocity = 0;
    }
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Displaying the results&lt;/h3&gt;
&lt;p&gt;To display the results, the new position on the track line can then be calculated.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;Transform finalBone = GetCurrentBone(true);&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, in this game, everything is stored in bones, which are 1/10th of a track. Yes, that area is pretty small, but not small enough, so the difference between this bone and the next bone needs to be calculated to see how much farther from the current bone of the current track piece the cart should be placed.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;Vector3 extraAmount = new Vector3(0, 0, 1) * (distanceToNextBone * (boneNum - (int)boneNum));
transform.position = finalBone.position + MathHelper.RotatePointAroundPivot(offsetAmount, Vector3.zero, finalBone.rotation) - MathHelper.RotatePointAroundPivot(extraAmount, Vector3.zero, finalBone.rotation);&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This same thing can be used with the rotation.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;Vector3 angleDifference = nextBone.eulerAngles - finalBone.eulerAngles;
Vector3 extraRotation = angleDifference * (boneNum - (int)boneNum);
transform.eulerAngles = finalBone.eulerAngles + extraRotation;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Pull Request&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoaster/pull/15&quot;&gt;https://github.com/ajayyy/VosterCoaster/pull/15&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;GitHub Account&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Building Hills | Building Roller Coasters | Voster Coaster | VR Game Programming]]></title><description><![CDATA[https://youtu.be/XGmVYe82HlQ Repository https://github.com/ajayyy/VosterCoasterVR Inclines image.png Inclines are created similarly to turns…]]></description><link>https://blog.ajay.app/building-hills-or-building-roller-coasters-or-voster-coaster-or-vr-game-programming/</link><guid isPermaLink="false">https://blog.ajay.app/building-hills-or-building-roller-coasters-or-voster-coaster-or-vr-game-programming/</guid><pubDate>Sun, 22 Jul 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://youtu.be/XGmVYe82HlQ&quot;&gt;https://youtu.be/XGmVYe82HlQ&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Repository&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR&quot;&gt;https://github.com/ajayyy/VosterCoasterVR&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Inclines&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmbMg5ZsLqbosd6JEvypnvkXZ9kVGW2zH6GYYBnns4hT3c&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Inclines are created similarly to turns, except they are rotated upward.&lt;/p&gt;
&lt;p&gt;The big issue with this is that the rotation used in all the math had to be changed. Before, only the Y axis was used in math, with inclines, it had to check the x axis.&lt;/p&gt;
&lt;h3&gt;Problems with the X axis (Gimbal Lock)&lt;/h3&gt;
&lt;p&gt;Rotations in game engines are stored as Quaternions, not angles. With euler angles (3d angles), multiple angles can represent the same angle. Ex. (110, 0, 0) and (70, 180, 180). This causes big issues with the math, as 70 degrees is not the proper angle to do math on in this instance. Luckily this is fixable. I luckily found a fix on &lt;a href=&quot;https://answers.unity.com/questions/1299082/transformeulerangles-x-issues.html&quot;&gt;unity answers&lt;/a&gt;, but I still found this phenomenon very confusing and interesting, so I thought I would share my experience here.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoaster/commit/7fa09d1cf8e192f17a525f80ca27feb628fc30bc&quot;&gt;https://github.com/ajayyy/VosterCoaster/commit/7fa09d1cf8e192f17a525f80ca27feb628fc30bc&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Creating a full roller coaster&lt;/h1&gt;
&lt;p&gt;A roller coaster is not just flat with a bunch or turns, or many hills but no turns. A roller coaster has a nice combination of both. To achieve this, the user has to be able to create turns on top of inclines, and inclines after a turn.&lt;/p&gt;
&lt;h3&gt;Problems with using one axis for rotation (Making inclines work after a turn)&lt;/h3&gt;
&lt;p&gt;Using the X axis for rotation works perfectly normally, but completely breaks once an incline needs to be created after a turn, as this moves the axis of rotation of each track piece.&lt;/p&gt;
&lt;p&gt;I tried to rotate the angles by adding and subtracting angles, but that turned out not working at all as what needed to happen was axis shifts instead.&lt;/p&gt;
&lt;p&gt;After a lot of thinking, I decided to model the situation in a 3D painting program (Tilt Brush), and figured out a solution.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmQmCmuZdZoGHqraU7BKXHTFNNogLhRxaNBqV4Z8kXDPVB&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;I figured out that the axis changes could be discovered using sin and cosine. By looking the rotations and positions of the track for 4 situations (0 degrees, 90, 180, 270), I was able to find the pattern.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//adjust angle to make it like it was normal
float angle = Mathf.Cos(currentAngle.y * Mathf.Deg2Rad) * fullTargetAngle.x + Mathf.Sin(currentAngle.y * Mathf.Deg2Rad + Mathf.PI) * fullTargetAngle.z;

targetAngle = new Vector3(angle, 0, 0);&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The original angle could be found this way. Here is a list of the angles at the 4 angles mentioned above.(top X, bottom Z)&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-text line-numbers&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;45  0  -45  0
0  45  0  45&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So to find the original angles you can use&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-text line-numbers&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;0  45   90   45
0 -45    0  -45&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These numbers can be represented by sin and cosine waves.&lt;/p&gt;
&lt;p&gt;This same process was used to find the positions at the rotations&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//theoretical position as if it was at a normal position
float x = Mathf.Sin(currentAngle.y * Mathf.Deg2Rad) * targetPosition.x + Mathf.Cos(currentAngle.y * Mathf.Deg2Rad) * targetPosition.z;
float y = targetPosition.y;

//set that position so that future calculations use that position instead
targetPosition = new Vector3(0, y, x);&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Turns after an incline&lt;/h3&gt;
&lt;p&gt;Luckily, this was much easier to implement. All turns need to do is be at the same height as the previous track, and make sure not to take the previous angle in to effect when creating the track, or else the turn will turn into an incline. Instead, it ignores that angle and only checks for the Y axis angle.&lt;/p&gt;
&lt;p&gt;I hope in the future to make it possible to make barrel rolling tracks (turn to the side instead of up or down).&lt;/p&gt;
&lt;h1&gt;Automatic Straight Tracks&lt;/h1&gt;
&lt;p&gt;The only way to make a straight track would be to somehow balance your hand steady enough to form a straight angle. This is practically impossible, so I added a button to force a straight path when needed.&lt;/p&gt;
&lt;h1&gt;Auto-complete&lt;/h1&gt;
&lt;p&gt;I also added basic auto complete functionality. It will automatically set the first track piece as the target position and rotation so that the track will turn toward the original start track and finish it. It will then disable editing mode.&lt;/p&gt;
&lt;h1&gt;Pull Request&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoaster/pull/13&quot;&gt;https://github.com/ajayyy/VosterCoaster/pull/13&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can see the full set of changes in the pull request. This post only includes an overview of major changes.&lt;/p&gt;
&lt;h1&gt;GitHub Account&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Building Roller Coasters | Smooth Full Tracks | Voster Coaster VR Game]]></title><description><![CDATA[Added Smooth Tracks.gif In VR Sorry for the shakiness, that's just how shaky the human head is, I should probably try stabilizing it next…]]></description><link>https://blog.ajay.app/building-roller-coasters-or-smooth-full-tracks/</link><guid isPermaLink="false">https://blog.ajay.app/building-roller-coasters-or-smooth-full-tracks/</guid><pubDate>Mon, 16 Jul 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/QmX6ECfwryqgBVLK5U9SNJzWZn2nQ3KV2pN3W2hP6UpnzR&quot; alt=&quot;Added Smooth Tracks.gif&quot;&gt;&lt;/p&gt;
&lt;h3&gt;In VR&lt;/h3&gt;
&lt;p&gt;Sorry for the shakiness, that&apos;s just how shaky the human head is, I should probably try stabilizing it next time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmbJbRDG4gkNvUvY9LzbajBXeYUrqei5hxN9u2z3mFAAF1&quot; alt=&quot;smooth tracks vr.gif&quot;&gt;&lt;/p&gt;
&lt;h3&gt;What it looked like before&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmYXqYkTuDU6w3YV1vp2HD3QNHPWognJXxyKUBSGZaU43S&quot; alt=&quot;image.gif&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Repository&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR&quot;&gt;https://github.com/ajayyy/VosterCoasterVR&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Fixed Curve Calculations&lt;/h1&gt;
&lt;p&gt;The curve calculations ended up having to be redone entirely.&lt;/p&gt;
&lt;p&gt;I started having big issues with how the track curve was being calculated when an angle was above 135 degrees, and tried many different things to try to fix it, including even trying to calculate the error made because the tracks are not actually curves, they are actually shapes with 10 segments (bones). However, that turned out not to have a noticeable enough difference to matter, and the calculations required way too much time to be feasible to be run every frame.&lt;/p&gt;
&lt;h4&gt;The margin of error calculation&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//because the track pieces are not actual circles and are made up of straight segments, the margin of error must be calculated
public float getDistanceForAngle(float adjustmentAngle, float currentDistance, int amount) {

    //total displacement on each axis
    float totalX = 0;
    float totalY = 0;

    for(int i = 0; i &amp;lt; amount; i++) {
        //calculate x value for this segment
        float x = Mathf.Sin(adjustmentAngle * (i + 1) * Mathf.Deg2Rad) * (currentDistance / Mathf.Sin(Mathf.PI / 2));
        //calculate y using x in the pythagorean formula
        float y = Mathf.Sqrt(Mathf.Pow(currentDistance, 2) - Mathf.Pow(x, 2));

        totalX += x;
        totalY += y;
    }

    float totalDisplacement = Mathf.Sqrt(Mathf.Pow(totalX, 2) + Mathf.Pow(totalY, 2));

    //find the factor of error this displacement has versus the ideal
    float differenceFactor = ((rollerCoaster.trackBoneSize / RollerCoaster.scale) * amount) / totalDisplacement;

    //multiply this error factor by the current distance and return it to be the real distance
    return currentDistance * differenceFactor;
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function calculates the length of each segment, then calculates the x and y displacement to get there. It then adds all these up and calculates the total displacement to be able to compare it with the perfect displacement (with a circle). This will fix the error, but it is not worth the extra computational time.&lt;/p&gt;
&lt;h4&gt;How the new curve calculations work&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmZL7tZWNgZtoNw5Di8PR1DhrAXFkjc1ryx73NVBsCB1aP&quot; alt=&quot;thing 2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;In this image, the line on the right represents the start angles (linear formulas), and the left line represents the target. The top red points on each line represent the positions (start and target). A line is created from the start point at the angle &lt;code class=&quot;language-text&quot;&gt;(180 - targetAngle) / 2&lt;/code&gt; (represented by angle A in the diagram). Using this line, the collision point between this line and the target line can be found (represented by the lower red dot on the target line in the diagram). This point and the start point are now two positions on the circle.&lt;/p&gt;
&lt;p&gt;To calculate the radius, a ratio is calculation.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//y = rsinA, x = rcosA
//these are the positions of these angles on a circle with a radius of 1
float targetNormalX = Mathf.Cos((-targetAngle.y + 360) * Mathf.Deg2Rad);
float targetNormalY = Mathf.Sin((-targetAngle.y + 360) * Mathf.Deg2Rad);
float startNormalX = Mathf.Cos(startTrackAngleRelative.y * Mathf.Deg2Rad);
float startNormalY = Mathf.Sin(startTrackAngleRelative.y * Mathf.Deg2Rad);

//the radius would be equal to 1 for a circle like this. Find how much the distances between the points account for the radius of the circle
float percentageOfRadius = Mathf.Sqrt(Mathf.Pow(startNormalX - targetNormalX, 2) + Mathf.Pow(startNormalY - targetNormalY, 2));&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This finds the ratio between the distance between these points, and the radius on a circle of radius 1 (to make it easier). This ratio can then be used to calculate the radius of the full circle.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//radius of the curve using the percentage calculations from above
float radius = Mathf.Sqrt(Mathf.Pow(circleStartX - targetPosition.x, 2) + Mathf.Pow(circleStartY - targetPosition.z, 2)) / percentageOfRadius;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, all that&apos;s left is to calculate how many tracks need to be drawn to create that curve, and how many to reach the target from that curve.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//calculate the cirumference of this circle multiplied by the amount this curve takes up of the whole circle
float curveLength = 2 * Mathf.PI * radius * (smallestAngleDifference.y / 360f);

curveTracksNeeded = (curveLength / (trackBoneSize * 10f));

startTracksNeeded = 0;

//Find difference between circleTarget and the target position
targetTracksNeeded = (Mathf.Sqrt(Mathf.Pow(circleTargetX - targetPosition.x, 2) + Mathf.Pow(circleTargetY - targetPosition.z, 2)) / (trackBoneSize * 10f));&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now the amount of tracks to create a curve and reach the target point are created.&lt;/p&gt;
&lt;p&gt;This only applied if the tracks to the target needed is more than the tracks to the start needed. If more tracks are needed to reach the start, a similar process is done, except in the other way.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//find intersection between line to the start of curve from the end of curve
float endToStartCurveSlope = Mathf.Tan((((180 - targetAngle.y) / 2)) * Mathf.Deg2Rad);
//the b value (b = y - mx)
float endToStartCurveB = targetPosition.z - endToStartCurveSlope * targetPosition.x;

//find intersection between this line and the start line (x = (b2 - b1) / (m1 - m2))
//this position will be the second point on the circle of the curve (end point), the first is the target track
float circleStartX = (endToStartCurveB - startB) / (startSlope - endToStartCurveSlope);
float circleStartY = endToStartCurveSlope * circleStartX + endToStartCurveB;

//y = rsinA, x = rcosA
//these are the positions of these angles on a circle with a radius of 1
float targetNormalX = Mathf.Cos((-targetAngle.y + 360) * Mathf.Deg2Rad);
float targetNormalY = Mathf.Sin((-targetAngle.y + 360) * Mathf.Deg2Rad);
float startNormalX = Mathf.Cos(startTrackAngleRelative.y * Mathf.Deg2Rad);
float startNormalY = Mathf.Sin(startTrackAngleRelative.y * Mathf.Deg2Rad);

//the radius would be equal to 1 for a circle like this. Find how much the distances between the points account for the radius of the circle
float percentageOfRadius = Mathf.Sqrt(Mathf.Pow(startNormalX - targetNormalX, 2) + Mathf.Pow(startNormalY - targetNormalY, 2));

//radius of the curve using the percentage calculations from above
float radius = Mathf.Sqrt(Mathf.Pow(circleStartX - targetPosition.x, 2) + Mathf.Pow(circleStartY - targetPosition.z, 2)) / percentageOfRadius;

//calculate the cirumference of this circle multiplied by the amount this curve takes up of the whole circle
float curveLength = 2 * Mathf.PI * radius * (smallestAngleDifference.y / 360f);

curveTracksNeeded = (curveLength / (trackBoneSize * 10f));

//Find difference between circleTarget and the target position
startTracksNeeded = (Mathf.Sqrt(Mathf.Pow(circleStartX - startPosition.x, 2) + Mathf.Pow(circleStartY - startPosition.z, 2)) / (trackBoneSize * 10f));

targetTracksNeeded = 0;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Creating a Smoothly Moving Track Segment&lt;/h1&gt;
&lt;p&gt;You can see in the old gif how choppy the translations move. This is because the track amounts are stored as integers, and full track pieces are placed each time. This does not produce a smooth or accurate track. To fix this, these numbers need to be saved as floats (number with decimals), and if necessary, only part of the track should be drawn. This makes the track more accurate to reach the target point, and makes the track movement very smooth.&lt;/p&gt;
&lt;p&gt;To do this, the track has to be able to only draw a percentage of the track.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//cut this off to make sure it is only the percentageOfTrack
for (int i = 0; i &amp;lt; rails.Length; i++) {
    for (int r = 1; r &amp;lt; rails[i].Length; r++) {
        //if the curve start is normal, treat this normally, otherwise just use the start angle
        if (secondCurveStart == -1) {
            currentAngle = adjustmentAngle;
        } else {
            currentAngle = startAngle;
        }

        if ((r - 1) / boneAmount &amp;gt; percentageOfTrack &amp;amp;&amp;amp; secondCurveStart != -1) {
            //if the curve start is not zero, treat the rest of the track as the upcomming angle instead of the start angle
            rails[i][r].transform.localPosition = defaultBonePosition;
            rails[i][r].transform.localEulerAngles = adjustmentAngle;
            rails[i][r].SetActive(true);
        } else if ((r - 1) / boneAmount &amp;gt; percentageOfTrack &amp;amp;&amp;amp; secondCurveStart == -1) {
            //if the curve start is zero, then treat the rest of the track as if it does not exist
            rails[i][r].transform.localPosition = Vector3.zero;
            rails[i][r].transform.localEulerAngles = Vector3.zero;
            rails[i][r].SetActive(false);
        } else if ((r + 1 - 1) / boneAmount &amp;gt; percentageOfTrack &amp;amp;&amp;amp; percentageOfTrack != 1) {
            rails[i][r].transform.localPosition = ((percentageOfTrack - ((r - 1) / boneAmount)) * boneAmount) * defaultBonePosition;
            rails[i][r].transform.localEulerAngles = ((percentageOfTrack - ((r - 1) / boneAmount)) * boneAmount) * currentAngle;
            rails[i][r].SetActive(true);
        }
    }
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This code cuts the track off if it has passed the percentage needed to draw, and will only draw part of it if necessary.&lt;/p&gt;
&lt;p&gt;This smooths it out a bit, but the way the track is drawn, there are three sections.
&lt;img src=&quot;/images/QmTB2MKMxxKxJ3t6Uz6BTfLmGAzSMwCrTY6a9KF6C5uX13&quot; alt=&quot;image.png&quot;&gt;
&lt;img src=&quot;/images/Qmbe95XSn8MB4249gciu5yxjTteNuDHMnLhEBmmQfPojVj&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Between each of these, these partial tracks need to be merged into one. To do this, as seen in the above code snippet, a variable called &lt;code class=&quot;language-text&quot;&gt;secondCurveStart&lt;/code&gt; is used. This variable specifies where a second curve inside of the track can start. This makes it so that a track can start off curving in one direction, and finish off curving in another direction.&lt;/p&gt;
&lt;p&gt;This same technique is used when combining two different track segments into one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmVp6L66wwCt2ggscN9Bsiq49nwhNpj6AXSx4BKzdCznQD&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;As you can see, these merged areas are unnoticeable, which is exactly what is required to create a smooth looking track.&lt;/p&gt;
&lt;p&gt;The angles are now checked to make sure they intersect properly to create a proper curve as well.&lt;/p&gt;
&lt;h1&gt;Attaching a second track segement&lt;/h1&gt;
&lt;p&gt;To continue to do the same math as before, but with the start track at a different angle, all of the positions are rotated in the direction of the angle.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//rotate ppositions around the start angle
targetPosition = RotatePointAroundPivot(targetPosition, startPosition, -currentAngle);
targetAngle -= currentAngle;
startTrackAngleRelative = Vector3.zero;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When combining the track segments, the start track has to merge with the second track segment. This is not normal as the start track is not considered part of the track segment, so it needs to store data about it&apos;s previous positions and angles in case the new segment is removed or edited.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;public Vector3 totalAngle = new Vector3(0, 0, 0);
//used when one track piece has mutliple angles on it
public Vector3 startAngle = new Vector3(0, 0, 0);
public float percentageOfTrack = 1;
public float secondCurveStart = -1;
//has this track piece been modified by the current incomplete track
public bool modified = false;
public Vector3 oldTotalAngle = Vector3.zero;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The modified variable is used to know that the track has been modified and is not in it&apos;s normal position. This is used when resetting the track position.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//reset last track back to normal if nessesary
if(totalTracksNeeded() == 0 &amp;amp;&amp;amp; startTrack.GetComponent&amp;lt;TrackPiece&amp;gt;().modified) {
    TrackPiece trackPiece = startTrack.GetComponent&amp;lt;TrackPiece&amp;gt;();

    Vector3 oldPosition = trackPiece.transform.position;
    Vector3 oldAngles = trackPiece.transform.eulerAngles;

    //reset position and angle before adjusting the track
    trackPiece.transform.position = Vector3.zero;
    trackPiece.transform.localEulerAngles = Vector3.zero;

    //adjust the track back the how it was
    trackPiece.AdjustTrack(trackPiece.oldTotalAngle, Vector3.zero, trackPiece.percentageOfTrack, -1);

    //set it to what it was before
    trackPiece.transform.position = oldPosition;
    trackPiece.transform.localEulerAngles = oldAngles;

    startTrack.GetComponent&amp;lt;TrackPiece&amp;gt;().modified = false;
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Bonus&lt;/h1&gt;
&lt;p&gt;Here is a weird bug I found along the way.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmRgrp54RZKYyNp2E2LKPCDPe6fq3xDxbaknACBrcs35g7&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Pull Request&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/10&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/pull/10&lt;/a&gt; (just cleanup)
&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/11&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/pull/11&lt;/a&gt; (redoing all bad curve calculations)
&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/12&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/pull/12&lt;/a&gt; (everything else)&lt;/p&gt;
&lt;p&gt;You can see the full set of changes in the pull request. This post only includes an overview of major changes.&lt;/p&gt;
&lt;h1&gt;GitHub Account&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Building Roller Coasters | Generating A Curve Of Curved Tracks]]></title><description><![CDATA[Repository https://github.com/ajayyy/VosterCoasterVR Automatic Curve Creation voster coaster automatically editing tracks.gif I made it so…]]></description><link>https://blog.ajay.app/building-roller-coasters-complete/</link><guid isPermaLink="false">https://blog.ajay.app/building-roller-coasters-complete/</guid><pubDate>Tue, 03 Jul 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Repository&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR&quot;&gt;https://github.com/ajayyy/VosterCoasterVR&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Automatic Curve Creation&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmYxZ43KUykLKepd9RuVUMF4v4E91USCPetFtJ1LgMPaai&quot; alt=&quot;voster coaster automatically editing tracks.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;I made it so that you can automatically create curves with just moving your controller around the 3D environment. This uses the angle and position relative to the last placed track to form either a curve or a straight line.&lt;/p&gt;
&lt;p&gt;This took on many different variations to eventually get working, so I am going to show how it currently works, as well as a summary of a few of the other ways I tried getting it working (as this post would be way too long if I showed them all.&lt;/p&gt;
&lt;h1&gt;Other changes&lt;/h1&gt;
&lt;p&gt;I also reformatted some classes. Instead of having a specific class called AddIncline for managing track adjustments, there is now the TrackPiece class for managing all items related to each track piece, and each track piece has its own instance of the class. The RollerCoaster class then uses these classes to manage the individual track pieces.&lt;/p&gt;
&lt;h1&gt;How you build a roller coaster in this game&lt;/h1&gt;
&lt;p&gt;To build a roller coaster, you point your controller in the direction you want the next segment of the roller coaster to point, and move the controller away from the last placed track. A track new track segment will be made between the last track segment and your controller position, ending off with the angle you are pointing at, turning if necessary.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/Qmf4FvA1bN1av1qP5ftP3Yu1SHZ9hTYVhZmjVFBwjKsfP6&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;How this is implemented&lt;/h1&gt;
&lt;p&gt;In the final iteration, I tried to make the system as simple as possible to avoid issues.&lt;/p&gt;
&lt;p&gt;It first creates two linear equations. One for the target and one for the start. Then, finds the point of intersection&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//calculate the slope for the target angle
float targetSlope = Mathf.Tan((90 - targetAngle.y) * Mathf.Deg2Rad);
//calculate slope for the start
float startSlope = Mathf.Tan((90 - getCurrentAngle(startTrack).y) * Mathf.Deg2Rad);

//the b value for the target angle (b = y - mx)
float targetB = rightController.transform.position.z - targetSlope * rightController.transform.position.x;
//the b value for the start angle (b = y - mx)
float startB = startTrack.transform.position.z - startSlope * startTrack.transform.position.x;

//calculate the collision point
float collisionX = (startB - targetB) / (targetSlope - startSlope);
float collisionY = targetSlope * collisionX + targetB;

//get distance from the start
float distanceFromStart = Mathf.Sqrt(Mathf.Pow(collisionX - startTrack.transform.position.x, 2) 
    + Mathf.Pow(collisionY - startTrack.transform.position.z, 2));

//get distance from target
float distanceFromTarget = Mathf.Sqrt(Mathf.Pow(collisionX - rightController.transform.position.x, 2) 
    + Mathf.Pow(collisionY - rightController.transform.position.z, 2));&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmYVyFcnUGQwcjbBfxkoAe5XrKMHQj1CrjvcdBHb8DERNN&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;A curve is then added in the middle to change the angles.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmRwvLsrJZBidogmqMwvyPJ1FcLJKx6QNy16n38SNRRkb4&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Lines of track straight to that collision point from the target and the start are then created, however when getting close to the middle, it creates a curve to smooth out the transition.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//the amount of tracks need coming straight off the start track
int startTracksNeeded = (int) Mathf.Abs(distanceFromStart / trackBoneSize / 9f);
int targetTracksNeeded = (int) Mathf.Abs(distanceFromTarget / trackBoneSize / 9f);
int curveTracksNeeded = Mathf.Min(startTracksNeeded, targetTracksNeeded);

startTracksNeeded -= curveTracksNeeded;
targetTracksNeeded -= curveTracksNeeded;

int totalTracksNeeded = startTracksNeeded + curveTracksNeeded + targetTracksNeeded;

int startTrackIndex = trackPieces.IndexOf(startTrack);
for (int i = 1; i &amp;lt; totalTracksNeeded + 1; i++) {

    Vector3 eulerAngles = getCurrentAngle(startTrack);
    //the total angle going through one whole track piece
    Vector3 totalTrackAngle = Vector3.zero;

    if(i &amp;gt; startTracksNeeded) {
        //then it is time to create a curve instead of just a straight line coming off the start track
        //calculate the adjustment needed for the curve
        eulerAngles = angle / curveTracksNeeded * (i - 1 - startTracksNeeded) + getCurrentAngle(startTrack);

        totalTrackAngle = angle / curveTracksNeeded;
    }

    if (i &amp;gt; startTracksNeeded + curveTracksNeeded) {
        //back to straight path, but in the angle of the target

        eulerAngles = targetAngle;

        totalTrackAngle = Vector3.zero;
    }

    if (startTrackIndex + i &amp;lt; trackPieces.Count) {
        GameObject trackPiece = trackPieces[i + startTrackIndex];

        //reset position and angle before adjusting the track
        trackPiece.transform.position = Vector3.zero;
        trackPiece.transform.localEulerAngles = Vector3.zero;

        //adjust the track
        trackPiece.GetComponent&amp;lt;TrackPiece&amp;gt;().AdjustTrack(totalTrackAngle);

        //calculate adjustments
        //this finds the last bone plus half of the track size (because position is based off the center of the object
        Vector3 modifiedPosition = trackPieces[i + startTrackIndex - 1].transform.Find(&amp;quot;Bottom_Rail/Joint_3_3/Joint_1_3/Joint_2_4/Joint_3_4/Joint_4_3/Joint_5_3/Joint_6_3/Joint_7_3/Joint_8_3/Joint_9_3/Joint_10_3&amp;quot;).position;

        //need to offset it by trackBoneSize by the angle (for now just with y part of angle
        trackPiece.transform.position = modifiedPosition - (new Vector3(Mathf.Sin(eulerAngles.y * Mathf.Deg2Rad), 0, Mathf.Cos(eulerAngles.y * Mathf.Deg2Rad)) * (trackBoneSize * 5));

        //set track rotation (after adjustment to make sure the adjustment process goes well)
        trackPiece.transform.localEulerAngles = eulerAngles;

    } else {

        //calculate adjustments
        //this finds the last bone plus half of the track size (because position is based off the center of the object
        Vector3 modifiedPosition = trackPieces[i + startTrackIndex - 1].transform.Find(&amp;quot;Bottom_Rail/Joint_3_3/Joint_1_3/Joint_2_4/Joint_3_4/Joint_4_3/Joint_5_3/Joint_6_3/Joint_7_3/Joint_8_3/Joint_9_3/Joint_10_3&amp;quot;).position;

        GameObject trackPiece = AddTrackPiece(totalTrackAngle, modifiedPosition, eulerAngles);

    }
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This creates a straight line until there have been more than the start tracks spawned, then creates the curve, then finishes with straight tracks in the target angle toward the target position.&lt;/p&gt;
&lt;h1&gt;Reaching this point&lt;/h1&gt;
&lt;p&gt;I started out by drawing out all of the lines I was dealing with to attempt to make a curve that fits the required parameters.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmZTvsFPN9eMBR1dFwjoSkWMR5PLtDeg5w1mHxqdBERtT2&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This helped me visualize all of the lines needed to be created to connect these two angles and where a curve could be created to create a seamless curve.&lt;/p&gt;
&lt;p&gt;I then tried rearranging equations to get the radius of a curve by finding two points on the curve.
&lt;img src=&quot;/images/QmYVzu3Y9eWh8qSQr2Jb9kFdWEnvS7UxapKaycZSTTNHaL&quot; alt=&quot;desmos.gif&quot;&gt;
(calculations can be found &lt;a href=&quot;https://www.desmos.com/calculator/qqu6so5sfv&quot;&gt;here&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;I tried creating &lt;a href=&quot;https://www.desmos.com/calculator/wfjan8fdby&quot;&gt;another equation&lt;/a&gt; to calculate the radius required to create a curve that touches two collision points, but it did not actually work in the most situations, because in most situations, one continuous curve from the start to the target is not possible, and instead there need to be a few straight tracks, then a curve, then a few more straight tracks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmQfg3bFAmDN5Msx6a8HiJT3hxz2AqguSsGfrBnaaTFEgG&quot; alt=&quot;image.png&quot;&gt;
(Approximation of what this would look like)&lt;/p&gt;
&lt;p&gt;However this did not actually work practically. I ended up figuring out a much simpler solution (as outlined above).&lt;/p&gt;
&lt;h1&gt;Pull Request&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/9&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/pull/9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can see the full set of changes in the pull request.&lt;/p&gt;
&lt;h1&gt;GitHub Account&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy&quot;&gt;https://github.com/ajayyy&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Real-Time Track Edits | Building Roller Coasters | Voster Coaster]]></title><description><![CDATA[Repository https://github.com/ajayyy/VosterCoasterVR/ What is Voster Coaster? Voster Coaster is a VR game where you build roller coasters. I…]]></description><link>https://blog.ajay.app/making-roller-coasters-or-real-time-track-edits-or-voster-coaster/</link><guid isPermaLink="false">https://blog.ajay.app/making-roller-coasters-or-real-time-track-edits-or-voster-coaster/</guid><pubDate>Fri, 15 Jun 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Repository&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;What is Voster Coaster?&lt;/h1&gt;
&lt;p&gt;Voster Coaster is a VR game where you build roller coasters. I plan on making it a theme park tycoon game in the future as well.&lt;/p&gt;
&lt;h1&gt;Made the height of track pieces uniform for turns&lt;/h1&gt;
&lt;p&gt;Before, the inside turn would be scaled to the correct height:
&lt;img src=&quot;/images/QmeuuCo7wJTEjyNeCryeov4hjzc2uykULPeSsJ6nvVEdes&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Now, the outside turn is:
&lt;img src=&quot;/images/QmRp48ztumVnzZcP8U75EGdCccxGnyxhm6Mu8Bbw8DXYjg&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This is much more useful, as it makes the total height uniform, and will help when combining turn pieces with normal pieces.&lt;/p&gt;
&lt;h1&gt;Fixed issue with track pieces becoming misaligned at certain angles&lt;/h1&gt;
&lt;p&gt;For angle of 27 degrees before the change:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmSUcue2ank4XotBdYvfQmkRrVJcrXbdzE7rLwBCxyoVh6&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;After:
&lt;img src=&quot;/images/QmZgKCQSAa8jZuAwNDj4efa8nSpNNb6KL1fptZatvVg6zV&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;How?&lt;/h3&gt;
&lt;p&gt;To fix this, I had to think of the track piece as one section of a full circle
&lt;img src=&quot;/images/QmbW8eRouaZVRH7VDEr7QMxqMr5arpTJ319kzBArik9L2h&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Then, I can use SOH CAH TOA to know that the Cos of the angle B (in this case 90 - 27 as shown in the diagram above), is equal to the adjacent divided by the hypotenuse.&lt;/p&gt;
&lt;p&gt;This means sinB = O/H, cosB = A/H, tanB = O/A (These are the lengths of the sides, Opposite and Adjacent of the angle, and the Hypotenuse).&lt;/p&gt;
&lt;p&gt;The angle is determined from the total angle of this track piece, but then it has to be &lt;code class=&quot;language-text&quot;&gt;90 - that angle&lt;/code&gt;, as shown in the image above. The known angle is angle A, and angle A is equal to &lt;code class=&quot;language-text&quot;&gt;90 - B&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The hypotenuse side is the radius of the circle.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//calculate the full angle this track piece gets to
float totalAngle = 90 - adjustmentAngle.y * 9f;

 //radius of the outside circle (SOH CAH TOA, cosA = a/h, h = a/cosA)
float radius1 = Mathf.Abs(sizes[i]) / Mathf.Cos(totalAngle * Mathf.Deg2Rad);&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, the proper radius is calculated instead of just assuming that the full height is the radius (as that would only work for a 90 degree turn).&lt;/p&gt;
&lt;h1&gt;Real-time track adjustment&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmUCVTC8ThpKmspCERk8mPaNQ2qBJwVB2nT2XBRfYkHxR8&quot; alt=&quot;realtime-track-adjustment.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;This was &lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/7/commits/2c5e172b54bc189f28f454a66ee1103069df509c&quot;&gt;done&lt;/a&gt; by creating a function to reset the track completely. This makes it so that you can modify it again.&lt;/p&gt;
&lt;p&gt;This works, but is very inefficient, requiring the whole mesh to be reset every frame just to be adjusted again.&lt;/p&gt;
&lt;p&gt;So, I &lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/8/commits/f24d3b1e5be1c70bdfc86f22fa974c068fcf3f05&quot;&gt;later&lt;/a&gt; changed it again. Now, when adjusting the mesh of the track, it does not do any math relative to the positions (&lt;code class=&quot;language-text&quot;&gt;transform.localPosition *=&lt;/code&gt;) but instead sets it to the default (&lt;code class=&quot;language-text&quot;&gt;transform.localPosition = defaultBonePosition * &lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This, along with setting the angle instead of adding to it, and saving the original size to attempt to scale all track pieces too removes the need to reset the track piece every frame when changing the angle.&lt;/p&gt;
&lt;h1&gt;GitHub Account&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/&quot;&gt;https://github.com/ajayyy/&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Pull Requests&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/6&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/pull/6&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/7&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/pull/7&lt;/a&gt;
&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/8&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/pull/8&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Bending Track Pieces | Building Roller Coasters | Voster Coaster]]></title><description><![CDATA[Repository https://github.com/ajayyy/VosterCoasterVR/ What is Voster Coaster? Voster Coaster is a VR game where you build roller coasters. I…]]></description><link>https://blog.ajay.app/making-roller-coasters-or-bending-track-pieces-or-voster-coaster/</link><guid isPermaLink="false">https://blog.ajay.app/making-roller-coasters-or-bending-track-pieces-or-voster-coaster/</guid><pubDate>Sat, 09 Jun 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Repository&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;What is Voster Coaster?&lt;/h1&gt;
&lt;p&gt;Voster Coaster is a VR game where you build roller coasters. I plan on making it a theme park tycoon game in the future as well.&lt;/p&gt;
&lt;h1&gt;What was added?&lt;/h1&gt;
&lt;p&gt;In this update I focused on the ability to form a full roller coaster from parts. To do so, I implemented a system that could take a track piece and bend it to add an incline, or make it a turn piece. This is going to be used to make a full spline-based roller coaster creator in the future.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/Qmeq3eZj6ehPgut499D85qypLJNQCU2dHM6AtsQrohwEfJ&quot; alt=&quot;image.png&quot;&gt;
&lt;img src=&quot;/images/QmNVLJH9SBwREpQhrKXuATqVyB9rrPezZrw5fZ4mKSLBGV&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;How was this implemented?&lt;/h1&gt;
&lt;h3&gt;Bones&lt;/h3&gt;
&lt;p&gt;3D models can have bones, and adding bones makes it much easier to programatically modify the meshes. In Cinema 4D, I added 10 bones to split each rail into 10 modifiable sections.&lt;/p&gt;
&lt;h3&gt;Bones become objects&lt;/h3&gt;
&lt;p&gt;In Unity, bones get represented as movable objects in the hierarchy. These objects can be moved around just as if they were a normal game object.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmaGDKJAVNaxiHPumfjjnfdc3mrpNrcLkj8tr8UmUSy2uq&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Exponential looking curves&lt;/h3&gt;
&lt;p&gt;In Unity you can set an object&apos;s local rotation by using &lt;code class=&quot;language-text&quot;&gt;gameObject.transform.localEulerAngles&lt;/code&gt;. By setting all the objects to have the same local rotation, it creates an exponential looking curve.&lt;/p&gt;
&lt;p&gt;The first object is slightly rotated, the next is moved forward in the direction of the previous bone, and then slightly rotated more. This continues for all of the bones&lt;/p&gt;
&lt;h3&gt;Targeting an angle&lt;/h3&gt;
&lt;p&gt;There are 9 usable bones (as the first bone should stay at an angle of 0 to look straight). This means that if you set all of the &lt;code class=&quot;language-text&quot;&gt;gameObject.transform.localEulerAngles&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;targetAngle/9&lt;/code&gt;, it will move toward the target angle.&lt;/p&gt;
&lt;p&gt;For example, if the target angle is 90 degrees, you can set each angle to 10 degrees.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;for (int i = 0; i &amp;lt; rails.Length; i++) {
            for (int r = 1; r &amp;lt; rails[i].Length - 1; r++) {
                //Attempt to rotate them all
                rails[i][r].transform.localEulerAngles += adjustmentAngle;
            }
 }&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Length Distortion&lt;/h3&gt;
&lt;p&gt;By having an exponential, the total distance traveled of the curves will be much smaller than the original. To account for that, a ratio is calculated to figure out how to make the curve reach the full length.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;//try to stretch the newly shaped incline to the proper size
    for (int i = 0; i &amp;lt; rails.Length; i++) {
        //get relative total offset for the adjusted track
        float difference = rails[i][rails[i].Length - 1].transform.position.z - rails[i][0].transform.position.z;

        float multiplier = sizes[i] / difference;

        for (int r = 1; r &amp;lt; rails[i].Length - 1; r++) {
            Vector3 pos = rails[i][r].transform.position;

            rails[i][r].transform.localPosition *= multiplier;
        }
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;sizes[i] is a previous value calculated earlier of the original size.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;sizes[i] = rails[i][rails[i].Length - 1].transform.position.z - rails[i][0].transform.position.z;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Turns&lt;/h3&gt;
&lt;p&gt;For turns, each rail would be a different size, as they have to travel further to reach the same spot (it is like a bigger circle.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/QmPAx2Eg4GeF2mQrmYLm9QFpFm4hg8LZjXkNqCGhZmVujW&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;As you can see in the above image, if the curve is the same size, it will not reach the same point. The orange is where the curve &lt;strong&gt;should&lt;/strong&gt; reach to.&lt;/p&gt;
&lt;p&gt;To accommodate for this, the outside circles must be stretched based on their difference from the inside circles.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;for (int r = 1; r &amp;lt; rails[i].Length - 1; r++) {
      if (adjustmentAngle.y != 0) { //making a turn, extend outside curves to accommodate
          int insideRail = 0;
          if (adjustmentAngle.y &amp;gt; 0) {
              insideRail = 1;
          }

          if (i != insideRail) { //in this case, 1 is the inside rail (doing just zero for now as a test, in the final version it should be based on if the angle is negative or positive)
               //get full offset compared to rails[insideRail]
               float offset = Mathf.Abs(railParents[insideRail].transform.position.x) + Mathf.Abs(railParents[i].transform.position.x);

               //radius of the inside circle
              float radius1 = Mathf.Abs(sizes[i]);
             //radius of outside circle (rails[i])
             float radius2 = radius1 + offset;

             print(radius1 + &amp;quot;  &amp;quot; + radius2 + &amp;quot;    &amp;quot; + radius2/radius1);

             rails[i][r].transform.localPosition *= radius2 / radius1;
         }
    }
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside rail is the index of the inside rail. This will change depending on if the turn is to the left or to the right. This will only happen if the adjustmentAngle is a y value, as y value angles are turns, and x value angles are inclines.&lt;/p&gt;
&lt;h1&gt;GitHub Account&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/&quot;&gt;https://github.com/ajayyy/&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Pull Request&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/3&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/pull/3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Small hotfix: &lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/pull/4&quot;&gt;https://github.com/ajayyy/VosterCoasterVR/pull/4&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Track Snapping - Voster Coaster - VR Roller Coaster Builder and Theme Park Builder]]></title><description><![CDATA[Placement image.png Before, in my proof of concept build, you could drop a full roller coaster in mid-air, and it would fall to the ground…]]></description><link>https://blog.ajay.app/track-snapping-voster-coaster-vr-roller-coaster-builder-and-theme-park-builder/</link><guid isPermaLink="false">https://blog.ajay.app/track-snapping-voster-coaster-vr-roller-coaster-builder-and-theme-park-builder/</guid><pubDate>Wed, 14 Mar 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Placement&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/gztp2taqnxzvkrt0vycn.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Before, in my proof of concept build, you could drop a full roller coaster in mid-air, and it would fall to the ground. Now, I have changed that entirely.&lt;/p&gt;
&lt;p&gt;You now have pieces of a roller coaster, that are placed on the ground below you. They always are on the ground, and it does not rely on the physics to drop it down.&lt;/p&gt;
&lt;p&gt;This is done by creating a raycast (a ray that is cast in a direction to find objects) toward the ground to find the nearest ground.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;RaycastHit hit;
if (Physics.Raycast(rightController.transform.position, Vector3.down, out hit)) {
        Vector3 spawnPosition = hit.point;
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The raycast collision point is then recorded, and used to figure out where to spawn the track. This point will be the nearest ground from the controller&apos;s position.&lt;/p&gt;
&lt;h1&gt;Issues with the Raycast&lt;/h1&gt;
&lt;p&gt;The raycast will not work perfectly because it is a ray (line) that is cast straight from the controller position (this made it so that it only snapped if the middle of the track was on that level of ground), but the track is a certain width. To fix this, I decided to use a box cast instead. A box cast can have a set size, and will find the first object (closest object) within that radius.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;RaycastHit groundHit;

bool groundBoxCastCollided = Physics.BoxCast(rightController.transform.position, (options[currentCoaster].GetComponent&amp;lt;BoxCollider&amp;gt;()).size * options[currentCoaster].transform.localScale.x / 2, Vector3.down, out groundHit, Quaternion.Euler(new Vector3(180, 0, 0)));&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This grabs makes a box cast downward, from the right controller&apos;s position, with the sizeof the current coaster options boxcollider multiplied by it&apos;s scale (as everything is scaled down).&lt;/p&gt;
&lt;h1&gt;Track Snapping&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/qivvfypgytelpkpkuvfj.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Another feature I added was the ability for tracks to snap together. If you attempt to place a track on another track, it will snap it beside it, to the closest side. This takes the boxraycast and checks if there is a game object with the tag &quot;Track&quot; under it. If so, it can calculate the position necessary to spawn it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c#&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-c# line-numbers&quot;&gt;&lt;code class=&quot;language-c#&quot;&gt;if (groundHit.collider.gameObject.tag == &amp;quot;Track&amp;quot;) {

                        Vector3 spawnPositionForward = groundHit.collider.gameObject.transform.position + (groundHit.collider.gameObject.transform.forward * ((BoxCollider)groundHit.collider).size.z) * groundHit.collider.gameObject.transform.localScale.x;
                        Vector3 spawnPositionBackward = groundHit.collider.gameObject.transform.position + ((-groundHit.collider.gameObject.transform.forward) * ((BoxCollider)groundHit.collider).size.z) * groundHit.collider.gameObject.transform.localScale.x;

                        float distForward = Vector3.Distance(currentThumbnail.transform.position, spawnPositionForward);
                        float distBackward = Vector3.Distance(currentThumbnail.transform.position, spawnPositionBackward);

                        if(distForward &amp;lt; distBackward) {
                            spawnPosition = spawnPositionForward;
                        } else {
                            spawnPosition = spawnPositionBackward;
                        }

                        spawnRotation = groundHit.collider.gameObject.transform.eulerAngles.y;
}&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This takes advantage of the BoxCast as it can now snap even when only part of the track is touching the other.&lt;/p&gt;
&lt;h1&gt;Other changes&lt;/h1&gt;
&lt;p&gt;I also added some other miscellaneous changes to prepare for future features, like the spline based roller coaster creator.&lt;/p&gt;
&lt;h1&gt;Next Steps&lt;/h1&gt;
&lt;p&gt;My next plan is to add the ability to customize the steepness of each track piece. This will help lead to the eventual ability to just select different points and have the program automatically make a track between them.&lt;/p&gt;
&lt;p&gt;These features to rely less on the physics engine and do more manually help reach that goal, and make the overall experience more consistent and less processor intensive.&lt;/p&gt;
&lt;h1&gt;Thanks for the models!&lt;/h1&gt;
&lt;p&gt;Thank you so much everyone for making such awesome models, I plan to add them all in once I&apos;m done the basic roller coaster building.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[VR Theme Park Manager Tycoon Game - Voster Coaster!]]></title><description><![CDATA[Video of current progress Placing roller coasters and paths, and moving them around. https://youtu.be/ZS0W4qKWxXk (Sorry, when recording, it…]]></description><link>https://blog.ajay.app/vr-theme-park-manager-tycoon-game-voster-coaster/</link><guid isPermaLink="false">https://blog.ajay.app/vr-theme-park-manager-tycoon-game-voster-coaster/</guid><pubDate>Mon, 26 Feb 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Video of current progress&lt;/h1&gt;
&lt;p&gt;Placing roller coasters and paths, and moving them around.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://youtu.be/ZS0W4qKWxXk&quot;&gt;https://youtu.be/ZS0W4qKWxXk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Sorry, when recording, it shows a zoomed in version of the screen, so it is a little hard to see everything)&lt;/p&gt;
&lt;h1&gt;What is this&lt;/h1&gt;
&lt;p&gt;I recently got a VR headset and then remembered this &lt;a href=&quot;https://www.youtube.com/watch?v=ZE0_oyK1Juo&quot;&gt;really awesome video&lt;/a&gt; and decided I wanted to make this a reality.&lt;/p&gt;
&lt;p&gt;This is going to be a VR theme park management game and roller coaster builder. I plan to implement all the features of a theme park management tycoon game, the ability to build roller coasters, rides, food stands, paths, and need to manager your money the whole time. I also want to make it so that you can switch from miniature mode, to human scale to walk around your park like it was a real thing.&lt;/p&gt;
&lt;h1&gt;Technology&lt;/h1&gt;
&lt;p&gt;This being built with Unity and the SteamVR plugin. The headset I own is the Samsung Oddesey Windows MR headset, but I&apos;m building it with SteamVR so that it will support all major PC based VR headsets.&lt;/p&gt;
&lt;p&gt;This is a room scale game, meaning you can walk around.&lt;/p&gt;
&lt;h1&gt;Contributing&lt;/h1&gt;
&lt;p&gt;I plan on making some task requests for some 3D models in the future, but for now, if you want to help me with the project, you can &lt;a href=&quot;https://discord.gg/6TAPnTx&quot;&gt;join my discord&lt;/a&gt; so that we can coordinate our work.&lt;/p&gt;
&lt;p&gt;To help with the programming, you must have a VR headset, download Unity, SteamVR, and then open the project in Unity.&lt;/p&gt;
&lt;p&gt;For helping with models, you do not need a VR headset as you would not need to test the full game.&lt;/p&gt;
&lt;h1&gt;Try it out&lt;/h1&gt;
&lt;p&gt;If you do want to try it out and have a VR headset, you can download an alpha build &lt;a href=&quot;https://github.com/ajayyy/VosterCoasterVR/releases&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Turn Based Attacker - Networking + LAN Multiplayer]]></title><description><![CDATA[What is this? This is a turn based strategy game where you must try to kill all the other player's units to win. There can be up to 1…]]></description><link>https://blog.ajay.app/turn-based-attacker-networking-lan-multiplayer/</link><guid isPermaLink="false">https://blog.ajay.app/turn-based-attacker-networking-lan-multiplayer/</guid><pubDate>Fri, 26 Jan 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;What is this?&lt;/h1&gt;
&lt;p&gt;This is a turn based strategy game where you must try to kill all the other player&apos;s units to win. There can be up to 16 players. You can see more in the &lt;a href=&quot;https://utopian.io/utopian-io/@ajayyy/turn-based-attacker&quot;&gt;original post&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Networking&lt;/h1&gt;
&lt;p&gt;In this release I added the ability to play a networked game. Now you can have other players join your game and can play together, from different computers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/shboosva3fsoe9wq30p9.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;You can join by specifying their ip address.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/uccwpjxxjs3imphmfsgo.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;The game communicates over TCP and sends messages for what button was pressed, or what person became selected. The networking is done manually by sending strings of text signifying a command, and since TCP sometimes groups commands, the game will make sure to separate commands before executing them.&lt;/p&gt;
&lt;p&gt;Since this is a turn based game, I do not have to deal with latency, meaning it just requires sending the data.&lt;/p&gt;
&lt;h1&gt;Future Plans&lt;/h1&gt;
&lt;p&gt;I have already implemented saving and loading games, but I have not implemented that into multiplayer yet (since that would require sending a lot of data over the network. My next plan is to work on loading your game into a multiplayer game.&lt;/p&gt;
&lt;p&gt;I also want to add the ability to add nicknames, and the ability to reconnect if you leave.&lt;/p&gt;
&lt;p&gt;Giving the game host the ability to kick players is also a feature I am planning on adding.&lt;/p&gt;
&lt;h1&gt;Download and Play&lt;/h1&gt;
&lt;p&gt;You can download and play the game &lt;a href=&quot;https://github.com/ajayyy/TurnBasedAttacker/releases&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Turn Based Attacker - Playablity, Polish, and Save/Load]]></title><description><![CDATA[What is this As described in my original post, this is a 2d turn based open source Unity game. You can see full details in the original post…]]></description><link>https://blog.ajay.app/turn-based-attacker-playablity-and-polish/</link><guid isPermaLink="false">https://blog.ajay.app/turn-based-attacker-playablity-and-polish/</guid><pubDate>Thu, 18 Jan 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;What is this&lt;/h1&gt;
&lt;p&gt;As described in &lt;a href=&quot;https://utopian.io/utopian-io/@ajayyy/turn-based-attacker&quot;&gt;my original post&lt;/a&gt;, this is a 2d turn based open source Unity game. You can see full details in &lt;a href=&quot;https://utopian.io/utopian-io/@ajayyy/turn-based-attacker&quot;&gt;the original post&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;What was added&lt;/h1&gt;
&lt;p&gt;I added many things in this release.&lt;/p&gt;
&lt;p&gt;I added a scoreboard to the end of the game to show the winners and losers, and to see who died last.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/brrbvtchqc6a7uzvadgu.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;I also added color fading, so when the current player switches, it won&apos;t immediatly change the color, but slowly fade to not hurt your eyes. I also added many animations for things spawning in, to make the whole game look smoother overall.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/i53fnxi52chjr0h0pqmn.gif&quot; alt=&quot;2a86d39e-1393-445e-969b-3c8443de8333.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;But, the most important thing I added was game saving, you can now save your game and load it for later.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/gkpupojafojelrhwwufi.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;I also added many playabilty fixes like making the pickups spawn throughout the gameplay so you never run out.&lt;/p&gt;
&lt;h1&gt;Future&lt;/h1&gt;
&lt;p&gt;I plan to add LAN multiplayer, and revamp the overall look.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Turn Based Attacker]]></title><description><![CDATA[What is this This is a 2d turn based open source game written in Unity. This game supports up to 16 players currently. In this game, each…]]></description><link>https://blog.ajay.app/turn-based-attacker/</link><guid isPermaLink="false">https://blog.ajay.app/turn-based-attacker/</guid><pubDate>Thu, 04 Jan 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;What is this&lt;/h1&gt;
&lt;p&gt;This is a 2d turn based open source game written in Unity. This game supports up to 16 players currently. In this game, each player takes their turn either moving, or collecting powerups. When they finish their turn it moves on the the next player. The goal is to eliminate all other players.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/hh5rnvgzbdupqmdhjeks.png&quot; alt=&quot;screenshot.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;And here is an image of the animation system when it changes turns.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/turn_based_turn_changing.gif&quot; alt=&quot;screenshot.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;On the left is the status of all players, it lists all the players, how many units they currently have alive, and which player&apos;s turn it is. When it is your turn, you can select one of your players by clicking on them, and move them using WASD, it will then move on to the next turn. If you currently have a powerup used, you can press E, and use it.&lt;/p&gt;
&lt;p&gt;Powerups include being able to spawn another unit, being able to fire a projectile at someone, being able to create a block.&lt;/p&gt;
&lt;p&gt;Some projectiles fire instantly at others, and others move one space per turn and go in the direction you fire. There is also one powerup that allows you to shoot a block in a direction, and it will spawn on the object it hits.&lt;/p&gt;
&lt;p&gt;If you are behind a block, the other person will not be able to shoot you, because it will hit the block instead.&lt;/p&gt;
&lt;h1&gt;Modularity&lt;/h1&gt;
&lt;p&gt;I made an animation system to make adding more and more turn based features very easy, with this system, all you need to do is add one script to your object, then you can set a target, and start the move animation to make it move, and go to the next turn.&lt;/p&gt;
&lt;h1&gt;Future Plans&lt;/h1&gt;
&lt;p&gt;Currently pickups do not spawn again after being used, and they are just in placeholder spots, I plan on making them spawn in slowly, and keep spawning throughout the game.&lt;/p&gt;
&lt;p&gt;Also, there is currently no way to tell what powerup a pickup is, it&apos;s just the same color, I plan on making a way to differientiate it.&lt;/p&gt;
&lt;p&gt;I also want to show what powerups each player has in the status sidebar, and implement more gametypes, and online multiplayer.&lt;/p&gt;
&lt;h1&gt;How is it made&lt;/h1&gt;
&lt;p&gt;It is made in Unity.&lt;/p&gt;
&lt;p&gt;To use the project, download it, and open it up with Unity.&lt;/p&gt;
&lt;p&gt;You can also download and try the build &lt;a href=&quot;https://github.com/ajayyy/FinalProject/releases/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[YouTube Watch History Statistic Viewer Update]]></title><description><![CDATA[image.png What is this As announced in this post, YouTube Watch History Statistic Viewer is a program that displays stats like the videos…]]></description><link>https://blog.ajay.app/youtube-watch-history-statistic-viewer-update/</link><guid isPermaLink="false">https://blog.ajay.app/youtube-watch-history-statistic-viewer-update/</guid><pubDate>Fri, 29 Dec 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/hkrrdpvcgw5aabvxvgoe.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;What is this&lt;/h1&gt;
&lt;p&gt;As announced in &lt;a href=&quot;https://utopian.io/utopian-io/@ajayyy/youtube-watch-history-statistics-viewer&quot;&gt;this post&lt;/a&gt;, YouTube Watch History Statistic Viewer is a program that displays stats like the videos you&apos;ve you&apos;ve watched the most, channels you&apos;ve watched the most, and categories you&apos;ve watched the most on YouTube.&lt;/p&gt;
&lt;h1&gt;What&apos;s in the Update&lt;/h1&gt;
&lt;p&gt;Google doesn&apos;t save your watch history forever, so now I have included a feature to save your watch history database to load later. Now, you can save your watch history database every year, and get a year by year statistic viewer of the whole history of your viewing on YouTube.&lt;/p&gt;
&lt;p&gt;I have also made a nice download page to show off features of the program.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/yhfujxjkoptx26tehtj2.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;You can see the live site at &lt;a href=&quot;http://YoutubeSta.ts.io/&quot;&gt;YoutubeSta.ts.io&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Logos&lt;/h1&gt;
&lt;p&gt;I also recently made a task request for logos, and got many responses. All the logos are really good, thank you.&lt;/p&gt;
&lt;h1&gt;Pull Requests&lt;/h1&gt;
&lt;p&gt;You can see all of the commits I have done in these three pull requests&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/YouTube-Watch-History-Statistic-Viewer/pull/23&quot;&gt;https://github.com/ajayyy/YouTube-Watch-History-Statistic-Viewer/pull/23&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/YouTube-Watch-History-Statistic-Viewer/pull/25&quot;&gt;https://github.com/ajayyy/YouTube-Watch-History-Statistic-Viewer/pull/25&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/YouTube-Watch-History-Statistic-Viewer/pull/26&quot;&gt;https://github.com/ajayyy/YouTube-Watch-History-Statistic-Viewer/pull/26&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[YouTube Watch History Statistics Viewer]]></title><description><![CDATA[What is this I have created a YouTube watch history statistics viewer. This reads your watch history data, and makes a short summary of all…]]></description><link>https://blog.ajay.app/youtube-watch-history-statistics-viewer/</link><guid isPermaLink="false">https://blog.ajay.app/youtube-watch-history-statistics-viewer/</guid><pubDate>Sat, 23 Dec 2017 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;What is this&lt;/h1&gt;
&lt;p&gt;I have created a YouTube watch history statistics viewer. This reads your watch history data, and makes a short summary of all the channels and videos you have watched, plus the categories you have watched in a similar style to &lt;a href=&quot;https://2017wrapped.com&quot;&gt;https://2017wrapped.com&lt;/a&gt; made for Spotify. It also sorts based on music, or non music.&lt;/p&gt;
&lt;h1&gt;How to use&lt;/h1&gt;
&lt;p&gt;You just need to &lt;a href=&quot;https://github.com/ajayyy/YouTube-Watch-History-Statistic-Viewer/releases&quot;&gt;download &lt;/a&gt; the zip file, extract it, and run the .exe file, the rest of the instructions are in the program.&lt;/p&gt;
&lt;h1&gt;State of developement&lt;/h1&gt;
&lt;p&gt;This is the first released version. I plan to release another version that will self extract to make it much simpler to use. If you have any suggestions, please create a GitHub issue in the repository.&lt;/p&gt;
&lt;p&gt;Also, if you do try it out, please report if it worked well for you in the comments.&lt;/p&gt;
&lt;h1&gt;Screenshots&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/lyg7mlwrmvqaxxnak0md.png&quot; alt=&quot;screenshot1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/tcto9mxfvflfa0vl66ai.png&quot; alt=&quot;screenshot2.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Development&lt;/h1&gt;
&lt;p&gt;This was made in Node.js with Electron, and uses the YouTube API to pull the channel names, and thumbnails. You are not able to read the watch history with the YouTube API, so I had to use a python scraper written by &lt;a href=&quot;https://github.com/zvodd/Youtube-Watch-History-Scraper&quot;&gt;zvodd&lt;/a&gt;. It downloads all the watch history into an sqlite database, which my program then reads and outputs the statistics.&lt;/p&gt;
&lt;h1&gt;Github Link&lt;/h1&gt;
&lt;p&gt;You can see the repo on Github here: &lt;a href=&quot;https://github.com/ajayyy/YouTube-Watch-History-Statistic-Viewer/&quot;&gt;https://github.com/ajayyy/YouTube-Watch-History-Statistic-Viewer/&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Escape The World, A Puzzle Game About Finding Exits]]></title><description><![CDATA[Hello I have opensourced my puzzle game called Escape The World. What is it This is a puzzle game based off of colors. The red squares can…]]></description><link>https://blog.ajay.app/escape-the-world-a-puzzle-game-about-finding-exits/</link><guid isPermaLink="false">https://blog.ajay.app/escape-the-world-a-puzzle-game-about-finding-exits/</guid><pubDate>Wed, 06 Dec 2017 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Hello&lt;/h1&gt;
&lt;p&gt;I have opensourced my puzzle game called Escape The World.&lt;/p&gt;
&lt;h1&gt;What is it&lt;/h1&gt;
&lt;p&gt;This is a puzzle game based off of colors. The red squares can only go through red exits and the blue squares can only go through blue exits, etc. The physics work similar to the game 2048, where when you press a direction key (W A S or D), then all the colored blocks you have selected go in that direction the farthest possible.&lt;/p&gt;
&lt;h1&gt;How is it made&lt;/h1&gt;
&lt;p&gt;This is made in Java with no extra libraries. The art is made in Inkscape.&lt;/p&gt;
&lt;p&gt;To use this project, just download the git repo, and open it up with the Eclipse IDE.&lt;/p&gt;
&lt;h1&gt;Image&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/1ce0.png&quot; alt=&quot;Image 1&quot;&gt;
&lt;img src=&quot;/images/1cdf.png&quot; alt=&quot;Image 2&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Download&lt;/h1&gt;
&lt;p&gt;You can download it &lt;a href=&quot;http://ajayinkingston.com/LD%20games/ld38/EscapeTheWorld.jar&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Open Sourced My 2D Racing Game]]></title><description><![CDATA[Hello, I have been working on a 2D racing game, it is a top down racing game with features similar to Mario Kart (power ups). I have decided…]]></description><link>https://blog.ajay.app/open-sourced-my-2d-racing-game/</link><guid isPermaLink="false">https://blog.ajay.app/open-sourced-my-2d-racing-game/</guid><pubDate>Sun, 19 Nov 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hello, I have been working on a 2D racing game, it is a top down racing game with features similar to Mario Kart (power ups).&lt;/p&gt;
&lt;p&gt;I have decided to open source it and wanted to announce it here.&lt;/p&gt;
&lt;h2&gt;Developement&lt;/h2&gt;
&lt;p&gt;This game is written in C# with Unity. To use the project, you must &lt;a href=&quot;https://unity3d.com/get-unity/download&quot;&gt;Download Unity&lt;/a&gt;, clone the &lt;a href=&quot;https://github.com/ajayyy/2DRacing&quot;&gt;repository&lt;/a&gt; and open the project in Unity.&lt;/p&gt;
&lt;h2&gt;Gameplay&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/2dRacer.gif&quot; alt=&quot;gameplay.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Link to repo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajayyy/2DRacing&quot;&gt;https://github.com/ajayyy/2DRacing&lt;/a&gt;&lt;/p&gt;</content:encoded></item></channel></rss>